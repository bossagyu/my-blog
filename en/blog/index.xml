<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Bossagyu Blog</title><link>https://bossagyu.com/en/blog/</link><description>Recent content in Blog on Bossagyu Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sun, 31 Dec 2023 20:46:36 +0900</lastBuildDate><atom:link href="https://bossagyu.com/en/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Using ChatGPT to Make a Hugo Blog Multilingual</title><link>https://bossagyu.com/en/blog/011-hugo-multilingul-support/</link><pubDate>Sun, 31 Dec 2023 20:46:36 +0900</pubDate><guid>https://bossagyu.com/en/blog/011-hugo-multilingul-support/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use ChatGPT to make a blog created with Hugo multilingual.&lt;/p>
&lt;h2 id="translating-articles-into-english-with-chatgpt">Translating Articles into English with ChatGPT&lt;/h2>
&lt;p>You can translate articles written in Markdown into English using &lt;a class="link" href="https://chat.openai.com/" target="_blank" rel="noopener"
>ChatGPT&lt;/a>. When doing so, use the following prompt to ensure that the format remains intact:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Please translate this Markdown into English without altering its format.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ensure that no extraneous output is included.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Present the translated content in a format that can be easily copied.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Paste your article in Japanese, and ChatGPT will output the translated Markdown. You can copy the output directly by clicking the copy button at the bottom left of the output.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-011-001.png"
loading="lazy"
alt="ChatGPT Screen"
>&lt;/p>
&lt;p>It is highly recommended to use GPT-4 instead of GPT-3.5, despite the subscription cost. GPT-4 significantly outperforms GPT-3.5 in providing accurate responses, making it useful for purposes beyond just translation.&lt;/p>
&lt;h2 id="making-hugo-multilingual">Making Hugo Multilingual&lt;/h2>
&lt;p>Here are the steps to make your Hugo site multilingual.&lt;/p>
&lt;h3 id="creating-configuration-files">Creating Configuration Files&lt;/h3>
&lt;p>Add the following settings to your config.toml:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set the default language, without this setting English is assumed default.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">defaultContentLanguage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;jp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Set configurations for each language&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">jp&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Bossagyu Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">languageName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ja-jp ðŸ‡¯ðŸ‡µ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LanguageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ja-jp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contentDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span> &lt;span class="c"># Directory for Japanese blog articles&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">jp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">en&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Bossagyu Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">languageName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;en-US ðŸ‡ºðŸ‡¸&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LanguageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;en-US&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contentDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;content.en&amp;#34;&lt;/span> &lt;span class="c"># Directory for English blog articles&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">en&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With the above settings, you can write Japanese articles in the &lt;code>content&lt;/code> directory and English articles in the &lt;code>content.en&lt;/code> directory to support multiple languages.&lt;/p>
&lt;p>The final directory structure will look like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â”œâ”€â”€ content/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â”‚ â”œâ”€â”€ index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â”‚ â””â”€â”€ blog/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â”‚ â”œâ”€â”€ index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â”‚ â””â”€â”€ article1.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">â””â”€â”€ content.en/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> â”œâ”€â”€ index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> â””â”€â”€ blog/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> â”œâ”€â”€ index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> â””â”€â”€ article1.en.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In the English directory, naming files as &lt;code>article-name.en.md&lt;/code> identifies them as English versions of the default language articles, and language switch icons will be added to the articles. For the articles, just copy and paste the translations from ChatGPT.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to make a Hugo blog multilingual using ChatGPT. Utilizing ChatGPT simplifies the translation process. Multilingual support can help reach audiences outside Japan, increasing readership.&lt;/p>
&lt;p>Since it&amp;rsquo;s low-cost and efficient, it&amp;rsquo;s worth giving it a try.&lt;/p></description></item><item><title>Creating and Displaying a Favicon with Hugo</title><link>https://bossagyu.com/en/blog/010-favicon/</link><pubDate>Sun, 24 Dec 2023 22:14:39 +0900</pubDate><guid>https://bossagyu.com/en/blog/010-favicon/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains a simple method to create a favicon. It also covers how to display a favicon in Hugo.&lt;/p>
&lt;h2 id="what-is-a-favicon">What is a Favicon?&lt;/h2>
&lt;p>A favicon is an icon that appears in bookmarks, tabs, and home screens for websites. Google has published &lt;a class="link" href="https://developers.google.com/search/docs/appearance/favicon-in-search?hl=ja#guidelines" target="_blank" rel="noopener"
>guidelines for favicons&lt;/a> that appear in search results. Adhering to these guidelines can help your favicon appear in search results.&lt;/p>
&lt;h2 id="creating-a-favicon">Creating a Favicon&lt;/h2>
&lt;p>To create a favicon, use the following site:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.favicon-generator.org/" target="_blank" rel="noopener"
>Favicon.ico &amp;amp; App Icon Generator&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>When you visit the site, you&amp;rsquo;ll see a screen like this.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-010-001.png"
loading="lazy"
alt="Favicon Generator"
>&lt;/p>
&lt;p>Enter the URL of the site you want a favicon for and click on Generate Favicon. Then, on the displayed screen, click the &amp;lsquo;Download the generated favicon&amp;rsquo; link to download the favicon.&lt;/p>
&lt;h2 id="displaying-a-favicon-in-hugo">Displaying a Favicon in Hugo&lt;/h2>
&lt;p>To display a favicon in Hugo, the process varies depending on the theme. For the &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>bearcub theme&lt;/a>, you can simply set it in the toml like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>params&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">favicon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;images/favicon.ico&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to create a favicon and display it in Hugo. Favicons are displayed in bookmarks, tabs, and home screens, so it&amp;rsquo;s a good idea to create one for your blog.&lt;/p></description></item><item><title>Introduction to Using Lighthouse</title><link>https://bossagyu.com/en/blog/009-light-house/</link><pubDate>Fri, 22 Dec 2023 23:08:00 +0900</pubDate><guid>https://bossagyu.com/en/blog/009-light-house/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to measure your blog&amp;rsquo;s performance using Lighthouse.&lt;/p>
&lt;h2 id="what-is-lighthouse">What is Lighthouse?&lt;/h2>
&lt;p>Lighthouse is a performance measurement tool for websites provided by Google. It&amp;rsquo;s available as a Google Chrome extension and can be used by installing the plugin.&lt;/p>
&lt;h2 id="installing-lighthouse">Installing Lighthouse&lt;/h2>
&lt;p>Install Lighthouse from the Chrome Web Store.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-001.png"
loading="lazy"
alt="Lighthouse Chrome Store"
>&lt;/p>
&lt;p>Open the site you want to analyze and click on the Lighthouse icon.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-002.png"
loading="lazy"
alt="Lighthouse Icon"
>&lt;/p>
&lt;p>Click on Generate report to start the analysis.&lt;br>
This time, I ran it on my &lt;a class="link" href="https://bossagyu.com/blog/001-hugo-netlify-build/" target="_blank" rel="noopener"
>blog page&lt;/a>.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-003.png"
loading="lazy"
alt="Lighthouse Execution Screen"
>&lt;/p>
&lt;p>The results are displayed as follows, taking about 1 minute to complete.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-004.png"
loading="lazy"
alt="Lighthouse Results"
>&lt;/p>
&lt;h2 id="interpreting-the-results">Interpreting the Results&lt;/h2>
&lt;h3 id="performance">Performance&lt;/h3>
&lt;p>Evaluates web performance, like page loading and image display speeds. Clicking the See calculator link takes you to more details.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-005.png"
loading="lazy"
alt="Lighthouse Performance"
>&lt;/p>
&lt;h3 id="accessibility">Accessibility&lt;/h3>
&lt;p>Checks whether all users can access content and navigate efficiently within the site. Scrolling down shows areas flagged by Accessibility.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-006.png"
loading="lazy"
alt="Lighthouse Accessibility"
>&lt;/p>
&lt;p>It points out weak color contrast in the code snippets and missing descriptions in links.&lt;/p>
&lt;p>However, the flagged content is not from my writing but depends on the template, so to fix this, it would be necessary to override the Hugo template.&lt;/p>
&lt;h3 id="best-practices">Best Practices&lt;/h3>
&lt;p>Tests the integrity of web pages. You can view the testing items in the results.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-007.png"
loading="lazy"
alt="Lighthouse Best Practices"
>&lt;/p>
&lt;h3 id="seo">SEO&lt;/h3>
&lt;p>You can check if the page is optimized for search engine result rankings.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-009-008.png"
loading="lazy"
alt="Lighthouse SEO"
>&lt;/p>
&lt;h3 id="progressive-web-app">Progressive Web App&lt;/h3>
&lt;p>Checks if the loading speed of web pages on smartphones is optimized and if it&amp;rsquo;s suitable for PWAs. This wasn&amp;rsquo;t checked in this case.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>The article explained how to measure the performance of a blog using Lighthouse.
Especially for SEO, as it affects visibility in Google search results, it&amp;rsquo;s important to address these issues adequately.&lt;/p></description></item><item><title>Scheduling Lambda Functions Regularly Using AWS EventBridge</title><link>https://bossagyu.com/en/blog/008-aws-eventbrdge/</link><pubDate>Thu, 21 Dec 2023 23:03:13 +0900</pubDate><guid>https://bossagyu.com/en/blog/008-aws-eventbrdge/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to schedule regular executions of Lambda functions using AWS EventBridge.&lt;/p>
&lt;h2 id="prerequisite">Prerequisite&lt;/h2>
&lt;p>It is assumed that the Lambda function has already been created.&lt;/p>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;p>Select the Lambda function and choose &amp;lsquo;Add trigger&amp;rsquo;.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-008-001.png"
loading="lazy"
alt="img-008-001.png"
>&lt;/p>
&lt;p>Select &amp;lsquo;EventBridge&amp;rsquo; from the triggers.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-008-002.png"
loading="lazy"
alt="img-008-002.png"
>&lt;/p>
&lt;p>The rule creation screen will appear. Configure the settings.&lt;br>
For this example, I set it to execute every 5 minutes using a cron expression.&lt;br>
For cron syntax, refer to the &lt;a class="link" href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html#cron-based" target="_blank" rel="noopener"
>Schedule type on EventBridge Scheduler&lt;/a> page.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-008-003.png"
loading="lazy"
alt="img-008-003.png"
>&lt;/p>
&lt;p>Once configured, EventBridge will be added to the triggers in the Lambda function diagram.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-008-004.png"
loading="lazy"
alt="img-008-004.png"
>&lt;/p>
&lt;p>As an aside, I created and tested a Function to send messages to LINE.&lt;br>
Now, it sends notifications every 5 minutes like this.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-008-005.png"
loading="lazy"
alt="img-008-005.png"
>&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to schedule Lambda functions regularly using AWS EventBridge.&lt;br>
Keep in mind that leaving the configured EventBridge running can incur charges, so delete it if it&amp;rsquo;s no longer needed.&lt;/p></description></item><item><title>Using Google Search Console to Make Your Blog Searchable on Google</title><link>https://bossagyu.com/en/blog/007-google-search-console/</link><pubDate>Mon, 18 Dec 2023 19:10:04 +0900</pubDate><guid>https://bossagyu.com/en/blog/007-google-search-console/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>To appear in Google searches, it&amp;rsquo;s not enough just to apply SEO strategies; your site must first be recognized by Google. This article explains how to make your own custom domain blog appear in Google search results using Google Search Console.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Registering with Google Search Console&lt;/li>
&lt;li>Verifying Domain Ownership&lt;/li>
&lt;li>Registering the Sitemap&lt;/li>
&lt;li>Requesting Index Registration&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="registering-with-google-search-console">Registering with Google Search Console&lt;/h2>
&lt;p>Register on &lt;a class="link" href="https://search.google.com/search-console/welcome" target="_blank" rel="noopener"
>Google Search Console&lt;/a>.&lt;/p>
&lt;p>Choose your domain and enter the URL.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-001.png"
loading="lazy"
alt="img-007-001.png"
>&lt;/p>
&lt;h2 id="verifying-domain-ownership">Verifying Domain Ownership&lt;/h2>
&lt;p>A screen like the following will appear to verify DNS ownership.&lt;br>
(The TXT record content is blacked out for privacy.)&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-002.png"
loading="lazy"
alt="img-007-002.png"
>&lt;/p>
&lt;p>You can verify ownership by adding a string specified by Google to your domain&amp;rsquo;s TXT record.
Go to your domain&amp;rsquo;s DNS settings and add a TXT record.&lt;/p>
&lt;p>In my case, I acquired the domain through Netlify, so I went to Netlify&amp;rsquo;s DNS settings.
Navigate to &lt;code>Domains -&amp;gt; Domain Settings -&amp;gt; DNS Records&lt;/code> and add the TXT record.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-003.png"
loading="lazy"
alt="img-007-003.png"
>&lt;/p>
&lt;p>Copy the content displayed on Google Search Console and paste it into the Value field.&lt;br>
(The Value part is blacked out for privacy.)&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-004.png"
loading="lazy"
alt="img-007-004.png"
>&lt;/p>
&lt;p>Wait for DNS updates, which can take a few hours depending on the provider.&lt;/p>
&lt;p>You can check DNS propagation from the command line.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">dig -t txt bossagyu.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Afterward, press the verify ownership button on Google Search Console.&lt;br>
This completes the verification process, and your domain will be registered with Google Search Console.&lt;/p>
&lt;h2 id="registering-the-sitemap">Registering the Sitemap&lt;/h2>
&lt;p>Registering a sitemap informs Google about the structure of your site, facilitating the crawling process.
For blogs created with Hugo, the sitemap is available at &lt;code>/sitemap.xml&lt;/code>, which you should register.&lt;/p>
&lt;p>From the left menu of Google Search Console, select &amp;lsquo;Sitemaps&amp;rsquo; and add your sitemap.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-005.png"
loading="lazy"
alt="img-007-005.png"
>&lt;/p>
&lt;h2 id="requesting-index-registration">Requesting Index Registration&lt;/h2>
&lt;p>Even if your site is registered in the sitemap, it can take time for Google to crawl and index it.
In my case, I requested index registration after waiting several days without being indexed.&lt;/p>
&lt;p>Search for the URL you want to register in Google Search Console, and click on &amp;lsquo;Request Indexing&amp;rsquo; found on the right side of the search result.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-007-006.png"
loading="lazy"
alt="img-007-006.png"
>&lt;/p>
&lt;p>This requests index registration.
It took a few hours for the index to be registered after clicking.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to make your custom domain blog searchable using Google Search Console.&lt;br>
It&amp;rsquo;s a waste not to have your blog appear in Google searches after all the effort of creating it, so give it a try.&lt;/p></description></item><item><title>Efficient Lambda Development with AWS Toolkit in IntelliJ</title><link>https://bossagyu.com/en/blog/006-intellij-lamda-setup/</link><pubDate>Tue, 12 Dec 2023 22:40:05 +0900</pubDate><guid>https://bossagyu.com/en/blog/006-intellij-lamda-setup/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to efficiently develop Lambda functions using the AWS Toolkit in IntelliJ.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Preliminary Preparation&lt;/li>
&lt;li>Installing AWS Toolkit&lt;/li>
&lt;li>Configuring AWS Toolkit&lt;/li>
&lt;li>Developing Lambda&lt;/li>
&lt;li>Executing Lambda Locally&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="preliminary-preparation">Preliminary Preparation&lt;/h2>
&lt;h3 id="installing-docker">Installing Docker&lt;/h3>
&lt;p>AWS Toolkit in IntelliJ uses Docker to run Lambda.&lt;br>
Prior to proceeding, please install Docker by referring to &lt;a class="link" href="https://docs.docker.jp/docker-for-mac/install.html" target="_blank" rel="noopener"
>these instructions&lt;/a>.&lt;/p>
&lt;h3 id="installing-aws-cli">Installing AWS CLI&lt;/h3>
&lt;p>Install AWS CLI (SAM).&lt;br>
For installation, refer to &lt;a class="link" href="https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/install-cliv2-mac.html" target="_blank" rel="noopener"
>these instructions&lt;/a>.&lt;/p>
&lt;p>In IntelliJ, set the path for SAM CLI executable under &lt;code>File -&amp;gt; Settings -&amp;gt; Tools -&amp;gt; AWS Toolkit&lt;/code>.&lt;br>
In my case, as I installed it through brew, I set the following path.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-006-005.png"
loading="lazy"
alt="img-006-005.png"
>&lt;/p>
&lt;h2 id="installing-aws-toolkit">Installing AWS Toolkit&lt;/h2>
&lt;p>Install the AWS Toolkit via IntelliJ plugins.
Refer to &lt;a class="link" href="https://www.jetbrains.com/help/idea/managing-plugins.html#install_plugin" target="_blank" rel="noopener"
>this guide&lt;/a> for plugin installation.&lt;/p>
&lt;h2 id="configuring-aws-toolkit">Configuring AWS Toolkit&lt;/h2>
&lt;p>To use AWS Toolkit, you need to set up your AWS credentials.&lt;/p>
&lt;p>Set up AWS credentials through AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-006-001.png"
loading="lazy"
alt="img-006-001.png"
>&lt;/p>
&lt;p>Obtain and configure your Access Key ID and Secret Access Key from the AWS console.
Once configured, AWS resources should appear in AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-006-002.png"
loading="lazy"
alt="img-006-002.png"
>&lt;/p>
&lt;p>Note: In this image, the region is set to &lt;code>us-east-1&lt;/code>. Please adjust according to the region where you intend to create your Lambda.&lt;/p>
&lt;h2 id="developing-lambda">Developing Lambda&lt;/h2>
&lt;p>Create a code snippet like the following.&lt;/p>
&lt;p>lambda-sample.py&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">lambda_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Hello World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create a Lambda through AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-006-003.png"
loading="lazy"
alt="img-006-003.png"
>&lt;/p>
&lt;p>Select Create Lambda Function and input the necessary values.&lt;br>
For the Handler, enter &lt;code>&amp;lt;filename&amp;gt;.&amp;lt;function name&amp;gt;&lt;/code> from your code snippet.&lt;br>
&lt;img src="https://bossagyu.com/blog/img-006-004.png"
loading="lazy"
alt="img-006-004.png"
>&lt;/p>
&lt;p>This completes the creation of your Lambda.&lt;/p>
&lt;h2 id="executing-lambda-locally">Executing Lambda Locally&lt;/h2>
&lt;p>The Toolkit also allows you to execute Lambda locally.
&lt;img src="https://bossagyu.com/blog/img-006-006.png"
loading="lazy"
alt="img-006-006.png"
>&lt;/p>
&lt;p>Selecting Run will execute the Lambda locally.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article provided a guide on efficiently developing Lambda using AWS Toolkit in IntelliJ.
Developing in IntelliJ and executing locally can significantly improve development efficiency.&lt;/p></description></item><item><title>How to Use GitHub Copilot in IntelliJ</title><link>https://bossagyu.com/en/blog/005-github-copilot/</link><pubDate>Mon, 11 Dec 2023 22:45:40 +0900</pubDate><guid>https://bossagyu.com/en/blog/005-github-copilot/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use GitHub Copilot in IntelliJ.
Additionally, a cheat sheet of shortcuts is provided.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Register for GitHub Copilot&lt;/li>
&lt;li>Configure IntelliJ&lt;/li>
&lt;li>Use GitHub Copilot&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="registering-for-github-copilot">Registering for GitHub Copilot&lt;/h2>
&lt;p>Register for GitHub Copilot through the &lt;a class="link" href="https://copilot.github.com/" target="_blank" rel="noopener"
>GitHub Copilot&lt;/a> link.&lt;/p>
&lt;h2 id="configuring-intellij">Configuring IntelliJ&lt;/h2>
&lt;p>Install the GitHub Copilot plugin from IntelliJ plugins.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-005-001.png"
loading="lazy"
alt="GitHub Copilot plugin"
>&lt;/p>
&lt;p>Once installed, restart IntelliJ.&lt;/p>
&lt;h2 id="using-github-copilot">Using GitHub Copilot&lt;/h2>
&lt;p>When you write code in IntelliJ, GitHub Copilot will assist with code completion.&lt;/p>
&lt;p>Here is a list of shortcuts for Mac:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Shortcut&lt;/th>
&lt;th>Function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>tab&lt;/code>&lt;/td>
&lt;td>Complete the code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Option&lt;/code> + &lt;code>]&lt;/code>&lt;/td>
&lt;td>Show the next completion suggestion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Option&lt;/code> + &lt;code>[&lt;/code>&lt;/td>
&lt;td>Show the previous completion suggestion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Command&lt;/code> + &lt;code>â†’&lt;/code>&lt;/td>
&lt;td>Accept only the next word of the suggestion&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to use GitHub Copilot in IntelliJ.
It&amp;rsquo;s worth noting that this article was written using GitHub Copilot, and it significantly assists with blog creation in Markdown, so those interested should give it a try.&lt;/p></description></item><item><title>Setting Up a Local Environment Using Pyenv and venv</title><link>https://bossagyu.com/en/blog/004-paython-setup/</link><pubDate>Sun, 10 Dec 2023 23:19:33 +0900</pubDate><guid>https://bossagyu.com/en/blog/004-paython-setup/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article documents how to set up a Python environment for development on a Mac local environment.&lt;br>
In this case, we will use two systems to manage different versions of Python and virtual environments:&lt;/p>
&lt;ul>
&lt;li>pyenv
&lt;ul>
&lt;li>Used to handle multiple versions of Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>venv
&lt;ul>
&lt;li>Used to separate environments for each project.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>For explanations on the differences and the necessity of each, this &lt;a class="link" href="https://jimaru.blog/programming/python/venv_pyenv_choice/" target="_blank" rel="noopener"
>article&lt;/a> is a helpful reference.&lt;/p>
&lt;h2 id="installing-python">Installing Python&lt;/h2>
&lt;p>First, install Pyenv on your local environment to use a specific version of Python.&lt;/p>
&lt;p>Install pyenv.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install pyenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the installed version of pyenv.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv 2.3.35
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add settings to zsh.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> -e &lt;span class="s1">&amp;#39;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n eval &amp;#34;$(pyenv init -)&amp;#34;\nfi&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Reload &lt;code>.zshrc&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Display a list of installable Python versions.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv install --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install the specified version.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv install 3.11.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Use the specified Python version in your project folder.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &amp;lt;created project folder&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv &lt;span class="nb">local&lt;/span> 3.11.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv versions
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If global, it will be applied to the entire system.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv global 3.11.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the version of Python being executed.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -V
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="creating-a-virtual-environment-with-venv">Creating a Virtual Environment with venv&lt;/h2>
&lt;p>Create a virtual environment in the project directory.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># python -m venv &amp;lt;virtual environment name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python -m venv venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Activate the virtual environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To deactivate, execute the following command.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This completes the setup of the local environment.&lt;/p></description></item><item><title>How to Set Up Google Analytics with Hugo</title><link>https://bossagyu.com/en/blog/003-google-analytics/</link><pubDate>Sat, 09 Dec 2023 18:09:42 +0900</pubDate><guid>https://bossagyu.com/en/blog/003-google-analytics/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article briefly explains how to set up Google Analytics with Hugo.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Register with Google Analytics&lt;/li>
&lt;li>Obtain the Tracking ID&lt;/li>
&lt;li>Add the Tracking ID to Hugo&amp;rsquo;s configuration&lt;/li>
&lt;/ol>
&lt;h2 id="registering-with-google-analytics">Registering with Google Analytics&lt;/h2>
&lt;p>Follow the instructions on &lt;a class="link" href="https://support.google.com/analytics/answer/9304153?hl=ja" target="_blank" rel="noopener"
>Setting up a new website or app with GA4&lt;/a> to register.&lt;br>
When you add a data stream, you will get a Tracking ID, so make a note of it.
&lt;img src="https://bossagyu.com/blog/img-003-001.png"
loading="lazy"
alt="img-003-001.png"
>
â€» The Tracking ID may be displayed as &amp;ldquo;Measurement ID&amp;rdquo; due to translation.&lt;/p>
&lt;h2 id="adding-tracking-id-to-hugos-configuration">Adding Tracking ID to Hugo&amp;rsquo;s Configuration&lt;/h2>
&lt;h3 id="add-settings-in-toml">Add settings in toml&lt;/h3>
&lt;p>Add &lt;code>googleAnalytics = Tracking ID&lt;/code> to your config.toml.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseURL&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;https://bossagyu.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">languageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;ja-jp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;Bossagyu Blog&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">theme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;hugo-bearcub&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">googleAnalytics&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;G-1234ABCDEF&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># â†‘ Add this line, replace the Tracking ID with your own.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="embedding-the-tracking-code">Embedding the Tracking Code&lt;/h3>
&lt;p>Some templates might read settings from the toml file, but the &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>bearcub&lt;/a> template I use does not support this, so I added the tracking code to the header myself.&lt;/p>
&lt;p>For the code snippet, I referred to &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>Makumaku Hugo Notes&lt;/a>.&lt;/p>
&lt;p>Create &lt;code>layouts/partials/analytics.html&lt;/code> to load the tracking code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">{{ if not .Site.IsServer }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ with .Site.GoogleAnalytics }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Google tag (gtag.js) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">async&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://www.googletagmanager.com/gtag/js?id={{ . }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataLayer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataLayer&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">function&lt;/span> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">dataLayer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arguments&lt;/span>&lt;span class="p">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;config&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;{{ . }}&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Make the page header load &lt;code>analytics.html&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copy the content of the template to override it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp themes/hugo-bearcub/layouts/_default/baseof.html layouts/_default/baseof.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim layouts/_default/baseof.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add &lt;code>{{- partial &amp;quot;analytics&amp;quot; . -}}&lt;/code> to baseof.html.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ with .Site.LanguageCode }}{{ . }}{{ else }}en-US{{ end }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{- partial &amp;#34;analytics&amp;#34; . -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-Clacks-Overhead&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;GNU Terry Pratchett&amp;#34;&lt;/span> &lt;span class="err">/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After adding the above source code and rebuilding, data will be sent to Google Analytics.&lt;/p>
&lt;h2 id="tips">Tips&lt;/h2>
&lt;p>If it seems like data is not being transmitted to Google Analytics despite these steps, it&amp;rsquo;s possible that the tags have not been added correctly.&lt;br>
To troubleshoot, first check if the tracking is included in the HTML by using Google Developer Tools.&lt;/p></description></item><item><title>Registering and Using the LINE Messaging API</title><link>https://bossagyu.com/en/blog/002-line-messaging-api/</link><pubDate>Thu, 07 Dec 2023 09:37:00 +0900</pubDate><guid>https://bossagyu.com/en/blog/002-line-messaging-api/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>I thought of creating an application using LINE&amp;rsquo;s Bot, so first, I will make the Bot usable.&lt;br>
This page introduces how to register for the LINE Messaging API and how to send messages from the command line using curl.&lt;/p>
&lt;h2 id="using-the-messaging-api">Using the Messaging API&lt;/h2>
&lt;p>Log in to &lt;a class="link" href="https://developers.line.biz/console/" target="_blank" rel="noopener"
>LINE Developers&lt;/a> and create a provider.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-002-001.png"
loading="lazy"
alt="img-002-001.png"
>&lt;/p>
&lt;p>A provider is (&lt;a class="link" href="https://developers.line.biz/ja/docs/line-developers-console/overview/#provider" target="_blank" rel="noopener"
>Explanation&lt;/a>)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">On the LINE Developers site, a service provider refers to individuals, companies, or organizations that provide services and obtain user information (service proprietor in LINE Mini Apps).
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So, you can enter any string you like.&lt;/p>
&lt;p>Then, create a new channel.
&lt;img src="https://bossagyu.com/blog/img-002-002.png"
loading="lazy"
alt="img-002-002.png"
>&lt;/p>
&lt;p>Clicking the create button will establish a new channel.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-002-003.png"
loading="lazy"
alt="img-002-003.png"
>&lt;/p>
&lt;h1 id="posting-from-the-command-line">Posting from the Command Line&lt;/h1>
&lt;p>Add friends by reading the QR code in the Messaging API settings.&lt;/p>
&lt;p>Obtain the &amp;lsquo;Channel Access Token (Long-lived)&amp;rsquo; from the Messaging API settings.
Get &amp;lsquo;Your User ID&amp;rsquo; from the channel basic settings.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;Channel Access Token (Long-lived)&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;Your User ID&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>uuidgen &lt;span class="p">|&lt;/span> tr &lt;span class="s2">&amp;#34;[:upper:]&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;[:lower:]&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -v -X POST https://api.line.me/v2/bot/message/push &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s2">&amp;#34;X-Line-Retry-Key: &amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-d &lt;span class="s2">&amp;#34;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;to\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;messages\&amp;#34;:[
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;type\&amp;#34;:\&amp;#34;text\&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;text\&amp;#34;:\&amp;#34;Hello, world1\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If a response is returned and you see a post from the Bot in your LINE chat, it&amp;rsquo;s a success!&lt;/p></description></item><item><title>Publishing a Blog with Hugo + Netlify + Github</title><link>https://bossagyu.com/en/blog/001-hugo-netlify-build/</link><pubDate>Sat, 02 Dec 2023 00:59:37 +0900</pubDate><guid>https://bossagyu.com/en/blog/001-hugo-netlify-build/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This document describes the steps to create a site with Hugo, manage it with Github, and build it with Netlify from scratch.&lt;br>
With this method, you can easily publish by just pushing your Markdown-written blog to Github.&lt;/p>
&lt;h2 id="process">Process&lt;/h2>
&lt;ol>
&lt;li>Generate a site with Hugo&lt;/li>
&lt;li>Push to Github&lt;/li>
&lt;li>Deploy with Netlify&lt;/li>
&lt;/ol>
&lt;h2 id="generating-a-static-site-with-hugo">Generating a Static Site with Hugo&lt;/h2>
&lt;p>First, install Hugo.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create a template for the blog.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo new site my-blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add a theme suitable for the blog as a submodule.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Add the theme as a submodule from Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Apply the theme by adding it to hugo.toml.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;theme = &amp;#39;ananke&amp;#39;&amp;#34;&lt;/span> &amp;gt;&amp;gt; config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Start the server.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Access the URL like &lt;code>http://localhost:51517/&lt;/code> shown in the startup log &lt;code>Web Server is available at http://localhost:51517/ (bind address 127.0.0.1)&lt;/code> to view the locally launched static site.&lt;/p>
&lt;h3 id="tips">Tips&lt;/h3>
&lt;ul>
&lt;li>If you want to change the Hugo theme, please choose your favorite one from &lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Hugo Themes&lt;/a>.
&lt;ul>
&lt;li>It&amp;rsquo;s recommended to run through until you build with Netlify first, as this can be changed later.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The way to write Toml files is described in &lt;a class="link" href="https://gohugo.io/getting-started/configuration/" target="_blank" rel="noopener"
>Configure Hugo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="push-to-github">Push to Github&lt;/h2>
&lt;p>Create a repository on &lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github&lt;/a>.&lt;br>
After creation, execute the following commands to push your site.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> .hugo_build.lock &amp;gt;&amp;gt; .gitignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;first commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;user name&amp;gt; with your own username.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is an example of creating a repository called my-blog.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:&amp;lt;user name&amp;gt;/my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Once the push is complete, the source code becomes viewable on the Github UI.&lt;/p>
&lt;h2 id="deploy-with-netlify">Deploy with Netlify&lt;/h2>
&lt;p>Access &lt;a class="link" href="https://www.netlify.com/" target="_blank" rel="noopener"
>Netlify&lt;/a> and perform deployment.&lt;br>
There are instructions on &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-netlify/" target="_blank" rel="noopener"
>Hugo&amp;rsquo;s official website&lt;/a>, so refer to them for integration.&lt;/p>
&lt;p>Follow the instructions to complete the deployment, and the result of the Deploy will be shown as &lt;code>published&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/blog/img-001-001.png"
loading="lazy"
alt="img-001-001.png"
>&lt;/p>
&lt;p>Click on the URL displayed on the site to access the deployed site.
&lt;img src="https://bossagyu.com/blog/img-001-002.png"
loading="lazy"
alt="img-001-002.png"
>&lt;/p>
&lt;p>This completes the deployment process.
After this, any changes made and pushed to main will automatically trigger deployment, updating the site content.&lt;/p></description></item></channel></rss>