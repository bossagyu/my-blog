<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bossagyu Blog</title><link>https://bossagyu.com/en/</link><description>Recent content on Bossagyu Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 13 Jan 2025 11:49:53 +0900</lastBuildDate><atom:link href="https://bossagyu.com/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Running the Feast Tutorial on macOS</title><link>https://bossagyu.com/en/blog/033-feast-tutorial/</link><pubDate>Mon, 13 Jan 2025 11:49:53 +0900</pubDate><guid>https://bossagyu.com/en/blog/033-feast-tutorial/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>In this article, we’ll follow the &lt;a class="link" href="https://github.com/feast-dev/feast" target="_blank" rel="noopener"
>Feast tutorial&lt;/a> and run it on a Mac.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Refer to &lt;a class="link" href="https://bossagyu.com/blog/032-python-uv/" target="_blank" rel="noopener"
>Setting up a Python development environment on Mac with UV&lt;/a> to prepare your environment. Once you’ve set up UV, install Feast in that environment.&lt;/p>
&lt;h2 id="installing-feast-and-launching-the-ui">Installing Feast and Launching the UI&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">uv pip install &lt;span class="nv">feast&lt;/span>&lt;span class="o">==&lt;/span>0.40.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>&lt;br>
As of 2025/01/13, there is a known bug in Feast causing the UI to fail on the latest version. (&lt;a class="link" href="https://github.com/feast-dev/feast/issues/4743" target="_blank" rel="noopener"
>Issue&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>Initialize a Feature Repository:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">feast init my_feature_repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Creating a new Feast repository in /Users/kouhei/Program/ML/feast/my_feature_repo.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You’ll see a new repository like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">tree my_feature_repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── my_feature_repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── feature_repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └── driver_stats.parquet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── example_repo.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── feature_store.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── test_workflow.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Apply the repository configuration:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> my_feature_repo/feature_repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">feast apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then launch the Feast UI:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">feast ui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Access &lt;code>http://0.0.0.0:8888/p/my_feature_repo&lt;/code> to see the interface.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-001.png"
width="1478"
height="581"
srcset="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-001_hub81249ce2a094e96f7c08a17dccf8b99_125412_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/033-feast-tutorial/img-033-001_hub81249ce2a094e96f7c08a17dccf8b99_125412_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Feast UI"
class="gallery-image"
data-flex-grow="254"
data-flex-basis="610px"
>&lt;/p>
&lt;h2 id="manipulating-data-in-feast">Manipulating Data in Feast&lt;/h2>
&lt;h3 id="1-creating-a-training-dataset">1. Creating a Training Dataset&lt;/h3>
&lt;p>Starting from step 5 in the tutorial, you’ll use Jupyter Notebook. Install it first:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">uv pip install jupyter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Launch the notebook:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">jupyter notebook
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In a Jupyter Notebook, run the following code to create a dataset for training:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">feast&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">FeatureStore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">entity_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;driver_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1002&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1003&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1004&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;event_timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2021&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">59&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2021&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2021&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">datetime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2021&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FeatureStore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">repo_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">training_df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">store&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_historical_features&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">entity_df&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">entity_df&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">features&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:conv_rate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:acc_rate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:avg_daily_trips&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_df&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">training_df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Train model&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># model = ml.fit(training_df)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Below is an example of the notebook output:&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002.png"
width="1258"
height="893"
srcset="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002_hu9a63a8af0e8adbd21872e8fe4c7e159c_152409_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002_hu9a63a8af0e8adbd21872e8fe4c7e159c_152409_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Training Data in Feast"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="338px"
>&lt;/p>
&lt;h3 id="2-materializing-the-online-store">2. Materializing the Online Store&lt;/h3>
&lt;p>To populate the Online Store, run:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">feast materialize 1970-01-01T00:00:00Z 2025-01-04T01:24:24Z
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>&lt;br>
In the provided sample, the command &lt;code>feast materialize-incremental $CURRENT_TIME&lt;/code> may not work, so we specify a broader time range here.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">01/04/2025 10:28:40 AM root WARNING: _list_feature_views will make breaking changes. ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Materializing &lt;span class="m">2&lt;/span> feature views from 1970-01-01 09:00:00+09:00 to 2025-01-04 10:24:24+09:00 into the sqlite online store.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">driver_hourly_stats_fresh:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0%&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> 0/5 ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">100%&lt;span class="p">|&lt;/span>███████████████████████████████████████████████████████████████&lt;span class="p">|&lt;/span> 5/5 ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">driver_hourly_stats:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">100%&lt;span class="p">|&lt;/span>███████████████████████████████████████████████████████████████&lt;span class="p">|&lt;/span> 5/5 ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-retrieving-data-from-the-online-store">3. Retrieving Data from the Online Store&lt;/h3>
&lt;p>Use Jupyter Notebook to fetch data from the Online Store:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pprint&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">pprint&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">feast&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">FeatureStore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FeatureStore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">repo_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">feature_vector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">store&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_online_features&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">features&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:conv_rate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:acc_rate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_hourly_stats:avg_daily_trips&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">entity_rows&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;driver_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1001&lt;/span>&lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_dict&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature_vector&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Make prediction&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># model.predict(feature_vector)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Example output:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;acc_rate&amp;#39;&lt;/span>: &lt;span class="o">[&lt;/span>0.5004482269287109&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;avg_daily_trips&amp;#39;&lt;/span>: &lt;span class="o">[&lt;/span>691&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;conv_rate&amp;#39;&lt;/span>: &lt;span class="o">[&lt;/span>0.3067885637283325&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;driver_id&amp;#39;&lt;/span>: &lt;span class="o">[&lt;/span>1001&lt;span class="o">]}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002.png"
width="1258"
height="893"
srcset="https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002_hu9a63a8af0e8adbd21872e8fe4c7e159c_152409_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/033-feast-tutorial/img-033-002_hu9a63a8af0e8adbd21872e8fe4c7e159c_152409_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Retrieving Data from Feast"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="338px"
>&lt;/p>
&lt;p>We’ve successfully materialized data in the Online Store and fetched it using Feast.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>We followed the Feast tutorial to prepare training data, materialize that data into the Online Store, and retrieve it. By managing both training and inference datasets in Feast, you can avoid training-serving skew, enhancing the consistency of your ML workflows.&lt;/p></description></item><item><title>Setting Up a Python Development Environment on Mac with UV</title><link>https://bossagyu.com/en/blog/032-python-uv/</link><pubDate>Wed, 01 Jan 2025 14:39:53 +0900</pubDate><guid>https://bossagyu.com/en/blog/032-python-uv/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article introduces how to set up a Python development environment on Mac using UV.&lt;/p>
&lt;h2 id="what-is-uv">What is UV?&lt;/h2>
&lt;p>UV is a package management tool announced in mid-2024.&lt;br>
It is written in Rust and is characterized by faster performance compared to other package managers.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/032-python-uv/img-032-001.png"
width="585"
height="134"
srcset="https://bossagyu.com/en/blog/032-python-uv/img-032-001_hud269bb2e4d14314d6b8cb2d2b3093c85_13302_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/032-python-uv/img-032-001_hud269bb2e4d14314d6b8cb2d2b3093c85_13302_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Comparison with Other Package Managers"
class="gallery-image"
data-flex-grow="436"
data-flex-basis="1047px"
>&lt;/p>
&lt;p>For official explanations, please refer to &lt;a class="link" href="https://docs.astral.sh/uv/" target="_blank" rel="noopener"
>this site&lt;/a>.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="installing-uv">Installing UV&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -LsSf https://astral.sh/uv/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add UV to your PATH:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.local/bin/env &lt;span class="o">(&lt;/span>sh, bash, zsh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.local/bin/env.fish &lt;span class="o">(&lt;/span>fish&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Verify installation:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">uv --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">uv 0.5.13 &lt;span class="o">(&lt;/span>c456bae5e 2024-12-27&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="how-to-use">How to Use&lt;/h3>
&lt;p>Create a virtual environment:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">uv venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Activate the virtual environment:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> .venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install packages:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">uv pip install &amp;lt;package name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For more details on UV, refer to the &lt;a class="link" href="https://docs.astral.sh/uv/" target="_blank" rel="noopener"
>official documentation&lt;/a>.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to set up a Python development environment on Mac.&lt;br>
As of January 2025, UV is both fast and easy to use, making it a valuable tool for setting up a Python development environment.&lt;/p></description></item><item><title>Improving Team Performance by Revisiting Scrum Ceremonies</title><link>https://bossagyu.com/en/blog/028-scrum-ceremony/</link><pubDate>Mon, 18 Nov 2024 09:36:05 +0900</pubDate><guid>https://bossagyu.com/en/blog/028-scrum-ceremony/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>In Scrum teams, ceremonies are essential for aligning team members, sharing progress, addressing challenges, and planning for the next sprint. However, when these ceremonies are conducted out of habit without revisiting their purpose, they can become time-consuming and ineffective.&lt;/p>
&lt;p>This article explores ways to improve team performance by revisiting and optimizing Scrum ceremonies.&lt;/p>
&lt;h2 id="clarify-the-purpose-of-each-ceremony">Clarify the Purpose of Each Ceremony&lt;/h2>
&lt;p>Each Scrum ceremony serves a distinct purpose, and ensuring that the agenda aligns with this purpose is crucial. Below are the purposes of the main Scrum ceremonies, based on the &lt;a class="link" href="https://scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-US.pdf" target="_blank" rel="noopener"
>Scrum Guide&lt;/a> with some interpretive notes.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Ceremony&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Daily Scrum&lt;/strong>&lt;/td>
&lt;td>Plan the day to achieve the sprint goal.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sprint Review&lt;/strong>&lt;/td>
&lt;td>Inspect the sprint&amp;rsquo;s outcome and adapt for future work.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Product Backlog Refinement&lt;/strong>&lt;/td>
&lt;td>Organize the backlog to support achieving the product goal.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sprint Retrospective&lt;/strong>&lt;/td>
&lt;td>Reflect on the sprint to identify improvements for quality and effectiveness.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sprint Planning&lt;/strong>&lt;/td>
&lt;td>Define the work to be completed during the next sprint.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="enforce-timeboxing">Enforce Timeboxing&lt;/h2>
&lt;p>Adhering to timeboxes is vital for maintaining efficient ceremonies. Timeboxing limits the duration of meetings to a set timeframe, ensuring focus and productivity. If a ceremony exceeds its timebox, reflect on why and plan adjustments to prevent recurrence.&lt;/p>
&lt;h2 id="tips-for-efficient-discussions-in-specific-ceremonies">Tips for Efficient Discussions in Specific Ceremonies&lt;/h2>
&lt;p>Certain ceremonies, like the Daily Scrum, Sprint Review, and Product Backlog Refinement, often consume more time than necessary. Here are some strategies to enhance their effectiveness.&lt;/p>
&lt;h3 id="daily-scrum">Daily Scrum&lt;/h3>
&lt;p>The Daily Scrum should focus on clarifying what the team needs to accomplish that day. Any other discussions should be deferred to smaller, focused meetings involving only relevant members.&lt;/p>
&lt;h4 id="tips">Tips:&lt;/h4>
&lt;ul>
&lt;li>Keep it under &lt;strong>15 minutes&lt;/strong>.&lt;/li>
&lt;li>Limit reporting to essential information.&lt;/li>
&lt;li>Defer in-depth discussions to separate, focused sessions.&lt;/li>
&lt;/ul>
&lt;h3 id="sprint-review">Sprint Review&lt;/h3>
&lt;p>The Sprint Review aims to gather feedback from stakeholders to guide future planning. Prepare for the session by clarifying what feedback is needed and from whom.&lt;/p>
&lt;h4 id="tips-1">Tips:&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>Prepare in advance&lt;/strong> to showcase progress effectively.&lt;/li>
&lt;li>Clearly define what feedback you want and why.&lt;/li>
&lt;/ul>
&lt;h3 id="product-backlog-refinement">Product Backlog Refinement&lt;/h3>
&lt;p>Product Backlog Refinement should ideally take up no more than 10% of the sprint duration. Avoid delving too deeply into items that are not imminent, and focus instead on high-priority tasks.&lt;/p>
&lt;h4 id="tips-2">Tips:&lt;/h4>
&lt;ul>
&lt;li>Avoid excessive detail on future backlog items; focus on what&amp;rsquo;s next.&lt;/li>
&lt;li>Use &lt;strong>relative estimation&lt;/strong> techniques and avoid overly precise estimates, acknowledging inherent uncertainty.&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article discussed methods to conduct Scrum ceremonies more efficiently, ultimately improving team performance. By enforcing timeboxes, aligning discussions with ceremony objectives, and focusing on value-driven conversations, teams can optimize their workflows and deliver better results.&lt;/p></description></item><item><title>How to Read Parquet Files on macOS</title><link>https://bossagyu.com/en/blog/031-read-parquet-file/</link><pubDate>Sun, 15 Sep 2024 16:52:04 +0900</pubDate><guid>https://bossagyu.com/en/blog/031-read-parquet-file/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article introduces a simple way to read Parquet files on macOS via the command line.&lt;/p>
&lt;h2 id="reading-with-parquet-cli">Reading with parquet-cli&lt;/h2>
&lt;p>We will use the &lt;a class="link" href="https://github.com/feast-dev/feast/tree/master/examples/podman_local/feature_repo/data" target="_blank" rel="noopener"
>Parquet&lt;/a> file provided as a sample by Feast.&lt;/p>
&lt;p>Install &lt;code>parquet-cli&lt;/code> on macOS using Homebrew.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">brew install parquet-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the meta information.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ parquet meta driver_stats.parquet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">File path: driver_stats.parquet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Created by: parquet-cpp-arrow version 18.1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Properties:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pandas: {&amp;#34;index_columns&amp;#34;: [{&amp;#34;kind&amp;#34;: &amp;#34;range&amp;#34;, &amp;#34;name&amp;#34;: null, &amp;#34;start&amp;#34;: 0, &amp;#34;stop&amp;#34;: 1807, &amp;#34;step&amp;#34;: 1}], &amp;#34;column_indexes&amp;#34;: [{&amp;#34;name&amp;#34;: null, &amp;#34;field_name&amp;#34;: null, &amp;#34;pandas_type&amp;#34;: &amp;#34;unicode&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;object&amp;#34;, &amp;#34;metadata&amp;#34;: {&amp;#34;encoding&amp;#34;: &amp;#34;UTF-8&amp;#34;}}], &amp;#34;columns&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;event_timestamp&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;event_timestamp&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;datetimetz&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;datetime64[ns]&amp;#34;, &amp;#34;metadata&amp;#34;: {&amp;#34;timezone&amp;#34;: &amp;#34;UTC&amp;#34;}}, {&amp;#34;name&amp;#34;: &amp;#34;driver_id&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;driver_id&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;int64&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;int64&amp;#34;, &amp;#34;metadata&amp;#34;: null}, {&amp;#34;name&amp;#34;: &amp;#34;conv_rate&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;conv_rate&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;float32&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;float32&amp;#34;, &amp;#34;metadata&amp;#34;: null}, {&amp;#34;name&amp;#34;: &amp;#34;acc_rate&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;acc_rate&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;float32&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;float32&amp;#34;, &amp;#34;metadata&amp;#34;: null}, {&amp;#34;name&amp;#34;: &amp;#34;avg_daily_trips&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;avg_daily_trips&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;int32&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;int32&amp;#34;, &amp;#34;metadata&amp;#34;: null}, {&amp;#34;name&amp;#34;: &amp;#34;created&amp;#34;, &amp;#34;field_name&amp;#34;: &amp;#34;created&amp;#34;, &amp;#34;pandas_type&amp;#34;: &amp;#34;datetime&amp;#34;, &amp;#34;numpy_type&amp;#34;: &amp;#34;datetime64[us]&amp;#34;, &amp;#34;metadata&amp;#34;: null}], &amp;#34;creator&amp;#34;: {&amp;#34;library&amp;#34;: &amp;#34;pyarrow&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;18.1.0&amp;#34;}, &amp;#34;pandas_version&amp;#34;: &amp;#34;2.2.3&amp;#34;}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ARROW:schema: /////xgGAAAQAAAAAAAKAA4ABgAFAAgACgAAAAABBAAQAAAAAAAKAAwAAAAEAAgACgAAAHAEAAAEAAAAAQAAAAwAAAAIAAwABAAIAAgAAABIBAAABAAAADsEAAB7ImluZGV4X2NvbHVtbnMiOiBbeyJraW5kIjogInJhbmdlIiwgIm5hbWUiOiBudWxsLCAic3RhcnQiOiAwLCAic3RvcCI6IDE4MDcsICJzdGVwIjogMX1dLCAiY29sdW1uX2luZGV4ZXMiOiBbeyJuYW1lIjogbnVsbCwgImZpZWxkX25hbWUiOiBudWxsLCAicGFuZGFzX3R5cGUiOiAidW5pY29kZSIsICJudW1weV90eXBlIjogIm9iamVjdCIsICJtZXRhZGF0YSI6IHsiZW5jb2RpbmciOiAiVVRGLTgifX1dLCAiY29sdW1ucyI6IFt7Im5hbWUiOiAiZXZlbnRfdGltZXN0YW1wIiwgImZpZWxkX25hbWUiOiAiZXZlbnRfdGltZXN0YW1wIiwgInBhbmRhc190eXBlIjogImRhdGV0aW1ldHoiLCAibnVtcHlfdHlwZSI6ICJkYXRldGltZTY0W25zXSIsICJtZXRhZGF0YSI6IHsidGltZXpvbmUiOiAiVVRDIn19LCB7Im5hbWUiOiAiZHJpdmVyX2lkIiwgImZpZWxkX25hbWUiOiAiZHJpdmVyX2lkIiwgInBhbmRhc190eXBlIjogImludDY0IiwgIm51bXB5X3R5cGUiOiAiaW50NjQiLCAibWV0YWRhdGEiOiBudWxsfSwgeyJuYW1lIjogImNvbnZfcmF0ZSIsICJmaWVsZF9uYW1lIjogImNvbnZfcmF0ZSIsICJwYW5kYXNfdHlwZSI6ICJmbG9hdDMyIiwgIm51bXB5X3R5cGUiOiAiZmxvYXQzMiIsICJtZXRhZGF0YSI6IG51bGx9LCB7Im5hbWUiOiAiYWNjX3JhdGUiLCAiZmllbGRfbmFtZSI6ICJhY2NfcmF0ZSIsICJwYW5kYXNfdHlwZSI6ICJmbG9hdDMyIiwgIm51bXB5X3R5cGUiOiAiZmxvYXQzMiIsICJtZXRhZGF0YSI6IG51bGx9LCB7Im5hbWUiOiAiYXZnX2RhaWx5X3RyaXBzIiwgImZpZWxkX25hbWUiOiAiYXZnX2RhaWx5X3RyaXBzIiwgInBhbmRhc190eXBlIjogImludDMyIiwgIm51bXB5X3R5cGUiOiAiaW50MzIiLCAibWV0YWRhdGEiOiBudWxsfSwgeyJuYW1lIjogImNyZWF0ZWQiLCAiZmllbGRfbmFtZSI6ICJjcmVhdGVkIiwgInBhbmRhc190eXBlIjogImRhdGV0aW1lIiwgIm51bXB5X3R5cGUiOiAiZGF0ZXRpbWU2NFt1c10iLCAibWV0YWRhdGEiOiBudWxsfV0sICJjcmVhdG9yIjogeyJsaWJyYXJ5IjogInB5YXJyb3ciLCAidmVyc2lvbiI6ICIxOC4xLjAifSwgInBhbmRhc192ZXJzaW9uIjogIjIuMi4zIn0ABgAAAHBhbmRhcwAABgAAACwBAADcAAAApAAAAHAAAAA0AAAABAAAAPz+//8AAAEKEAAAABgAAAAEAAAAAAAAAAcAAABjcmVhdGVkAGr///8AAAIAKP///wAAAQIQAAAAIAAAAAQAAAAAAAAADwAAAGF2Z19kYWlseV90cmlwcwBo////AAAAASAAAABg////AAABAxAAAAAcAAAABAAAAAAAAAAIAAAAYWNjX3JhdGUAAAAA0v///wAAAQCQ////AAABAxAAAAAgAAAABAAAAAAAAAAJAAAAY29udl9yYXRlAAYACAAGAAYAAAAAAAEAxP///wAAAQIQAAAAJAAAAAQAAAAAAAAACQAAAGRyaXZlcl9pZAAAAAgADAAIAAcACAAAAAAAAAFAAAAAEAAUAAgABgAHAAwAAAAQABAAAAAAAAEKEAAAACgAAAAEAAAAAAAAAA8AAABldmVudF90aW1lc3RhbXAACAAMAAYACAAIAAAAAAADAAQAAAADAAAAVVRDAAAAAAA=
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Schema:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">message schema {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional int64 event_timestamp (TIMESTAMP(NANOS,true));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional int64 driver_id;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional float conv_rate;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional float acc_rate;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional int32 avg_daily_trips;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">optional int64 created (TIMESTAMP(MICROS,false));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Row group 0: count: 1807 16.88 B records start: 4 total(compressed): 29.796 kB total(uncompressed):29.760 kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> type encodings count avg size nulls min / max
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">event_timestamp INT64 S _ R 1807 2.78 B 0 &amp;#34;2021-04-12T07:00:00.00000...&amp;#34; / &amp;#34;2024-12-28T14:00:00.00000...&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">driver_id INT64 S _ R 1807 0.07 B 0 &amp;#34;1001&amp;#34; / &amp;#34;1005&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conv_rate FLOAT S _ R 1807 5.42 B 0 &amp;#34;1.9221554E-4&amp;#34; / &amp;#34;0.9998668&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">acc_rate FLOAT S _ R 1807 5.42 B 0 &amp;#34;2.1329636E-4&amp;#34; / &amp;#34;0.99993944&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">avg_daily_trips INT32 S _ R 1807 3.14 B 0 &amp;#34;0&amp;#34; / &amp;#34;999&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">created INT64 S _ R 1807 0.05 B 0 &amp;#34;2024-12-28T15:20:28.266000&amp;#34; / &amp;#34;2024-12-28T15:20:28.266000&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>View the data using &lt;code>head&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ parquet head driver_stats.parquet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734102000000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.27734742, &amp;#34;acc_rate&amp;#34;: 0.7152132, &amp;#34;avg_daily_trips&amp;#34;: 823, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734105600000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.57354224, &amp;#34;acc_rate&amp;#34;: 0.9831811, &amp;#34;avg_daily_trips&amp;#34;: 851, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734109200000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.3287562, &amp;#34;acc_rate&amp;#34;: 0.6172164, &amp;#34;avg_daily_trips&amp;#34;: 116, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734112800000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.045716193, &amp;#34;acc_rate&amp;#34;: 0.032996926, &amp;#34;avg_daily_trips&amp;#34;: 741, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734116400000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.12863782, &amp;#34;acc_rate&amp;#34;: 0.8951942, &amp;#34;avg_daily_trips&amp;#34;: 534, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734120000000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.9555806, &amp;#34;acc_rate&amp;#34;: 0.62216556, &amp;#34;avg_daily_trips&amp;#34;: 216, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734123600000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.75297666, &amp;#34;acc_rate&amp;#34;: 0.37602386, &amp;#34;avg_daily_trips&amp;#34;: 954, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734127200000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.46957988, &amp;#34;acc_rate&amp;#34;: 0.6454945, &amp;#34;avg_daily_trips&amp;#34;: 360, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734130800000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.6702387, &amp;#34;acc_rate&amp;#34;: 0.36532214, &amp;#34;avg_daily_trips&amp;#34;: 396, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;event_timestamp&amp;#34;: 1734134400000000000, &amp;#34;driver_id&amp;#34;: 1005, &amp;#34;conv_rate&amp;#34;: 0.019627139, &amp;#34;acc_rate&amp;#34;: 0.528229, &amp;#34;avg_daily_trips&amp;#34;: 833, &amp;#34;created&amp;#34;: 1735399228266000}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the schema.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ parquet schema driver_stats.parquet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : &amp;#34;record&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;schema&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;fields&amp;#34; : [ {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;event_timestamp&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, &amp;#34;long&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;driver_id&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, &amp;#34;long&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;conv_rate&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, &amp;#34;float&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;acc_rate&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, &amp;#34;float&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;avg_daily_trips&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, &amp;#34;int&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;name&amp;#34; : &amp;#34;created&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : [ &amp;#34;null&amp;#34;, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;type&amp;#34; : &amp;#34;long&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;logicalType&amp;#34; : &amp;#34;local-timestamp-micros&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;default&amp;#34; : null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This article explained how to easily read Parquet files on macOS.&lt;/p></description></item><item><title>Setting Up a Go Development Environment on Mac and Running Hello World</title><link>https://bossagyu.com/en/blog/030-go-environment-construction/</link><pubDate>Sun, 15 Sep 2024 16:52:04 +0900</pubDate><guid>https://bossagyu.com/en/blog/030-go-environment-construction/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This guide introduces how to quickly set up a Go development environment on Mac and run a Hello World program.&lt;/p>
&lt;h2 id="installing-go">Installing Go&lt;/h2>
&lt;p>Install Go using Homebrew.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; brew install go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the installed version.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go version go1.21.3 darwin/arm64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="running-hello-world">Running Hello World&lt;/h2>
&lt;p>Save the following code as &lt;code>main.go&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello World\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Run the code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go run hello.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello World
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Build the binary and execute it.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go build hello.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hello* hello.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ./hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello World
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>That&amp;rsquo;s how you can set up a Go development environment on Mac and quickly run a Hello World program.&lt;/p></description></item><item><title>Research on gRPC</title><link>https://bossagyu.com/en/blog/029-grpc/</link><pubDate>Sun, 01 Sep 2024 17:53:57 +0900</pubDate><guid>https://bossagyu.com/en/blog/029-grpc/</guid><description>&lt;h2 id="what-is-grpc">What is gRPC?&lt;/h2>
&lt;ul>
&lt;li>gRPC is a protocol developed by Google to implement RPC.&lt;/li>
&lt;li>It uses Protocol Buffers to serialize data, enabling high-speed communication.&lt;/li>
&lt;li>API specifications are pre-defined in a &lt;code>.proto&lt;/code> file using IDL, from which source code for both the server and client sides is generated.&lt;/li>
&lt;/ul>
&lt;p>Differences between REST and gRPC&lt;/p>
&lt;ul>
&lt;li>REST is resource-oriented, whereas RPC focuses on method invocation, with data being a byproduct.&lt;/li>
&lt;/ul>
&lt;h2 id="advantages-and-disadvantages">Advantages and Disadvantages&lt;/h2>
&lt;h3 id="advantages">Advantages&lt;/h3>
&lt;ul>
&lt;li>High performance with HTTP/2&lt;/li>
&lt;li>Data transfer via Protocol Buffers
&lt;ul>
&lt;li>Development follows a schema-first approach due to the use of IDL&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Flexible streaming modes&lt;/li>
&lt;/ul>
&lt;h3 id="disadvantages">Disadvantages&lt;/h3>
&lt;ul>
&lt;li>Non-compliance with HTTP/2&lt;/li>
&lt;li>Limited browser support&lt;/li>
&lt;li>Variability in feature implementation depending on the programming language&lt;/li>
&lt;li>Serialized binary data is not human-readable&lt;/li>
&lt;li>REST is also sufficiently fast&lt;/li>
&lt;/ul>
&lt;h2 id="proto-files">.proto Files&lt;/h2>
&lt;p>gRPC uses Protocol Buffers as its serialization format.&lt;br>
Schema definitions are made in files with the &lt;code>.proto&lt;/code> extension, and code for various languages is generated using the &lt;code>protoc&lt;/code> command.&lt;br>
In Protocol Buffers, all values have types, which can be divided into scalar types and message types.&lt;/p>
&lt;h3 id="scalar-types">Scalar Types&lt;/h3>
&lt;ul>
&lt;li>Numeric, string, boolean, byte array&lt;/li>
&lt;/ul>
&lt;h3 id="message-types">Message Types&lt;/h3>
&lt;ul>
&lt;li>Message types with multiple fields&lt;/li>
&lt;li>Multiple message types can be defined in a single &lt;code>.proto&lt;/code> file&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">message Person &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int32 &lt;span class="nv">id&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> string &lt;span class="nv">name&lt;/span> &lt;span class="o">=&lt;/span> 2&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> string &lt;span class="nv">email&lt;/span> &lt;span class="o">=&lt;/span> 3&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="conducting-the-grpc-quick-start">Conducting the gRPC Quick Start&lt;/h2>
&lt;p>This time, we will perform the gRPC Quick Start using a Python environment.&lt;br>
&lt;a class="link" href="https://grpc.io/docs/languages/python/quickstart/" target="_blank" rel="noopener"
>https://grpc.io/docs/languages/python/quickstart/&lt;/a>&lt;/p>
&lt;p>Set up the necessary Python environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -m pip install grpcio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python -m pip install grpcio-tools
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Download the sample code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone -b v1.64.0 --depth &lt;span class="m">1&lt;/span> --shallow-submodules https://github.com/grpc/grpc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> grpc/examples/python/helloworld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Start the server.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python greeter_server.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server started, listening on &lt;span class="m">50051&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Open another terminal and start the client.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python greeter_client.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## Response&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Will try to greet world ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Greeter client received: Hello, you!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Communication between the gRPC client and server was successfully established.&lt;/p>
&lt;h2 id="modifying-the-proto-file">Modifying the .proto File&lt;/h2>
&lt;p>This time, we will modify the &lt;code>helloworld.proto&lt;/code> file to add a new method.&lt;/p>
&lt;p>Move to the directory containing the &lt;code>helloworld.proto&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> grpc/examples/protos
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Modify the file as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">option&lt;/span> &lt;span class="n">java_multiple_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">option&lt;/span> &lt;span class="n">java_package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;io.grpc.examples.helloworld&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">option&lt;/span> &lt;span class="n">java_outer_classname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;HelloWorldProto&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">option&lt;/span> &lt;span class="n">objc_class_prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;HLW&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">package&lt;/span> &lt;span class="n">helloworld&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">greeting&lt;/span> &lt;span class="n">service&lt;/span> &lt;span class="n">definition&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">service&lt;/span> &lt;span class="n">Greeter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Sends&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">greeting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rpc&lt;/span> &lt;span class="n">SayHello&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloReply&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Add&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">following&lt;/span> &lt;span class="n">line&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rpc&lt;/span> &lt;span class="n">SayHelloAgain&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloReply&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rpc&lt;/span> &lt;span class="n">SayHelloStreamReply&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">HelloReply&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rpc&lt;/span> &lt;span class="n">SayHelloBidiStream&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">HelloReply&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">request&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="n">containing&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="s1">&amp;#39;s name.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">message&lt;/span> &lt;span class="n">HelloRequest&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="n">containing&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">greetings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">message&lt;/span> &lt;span class="n">HelloReply&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">string&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Generate the gRPC code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> examples/python/helloworld
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python -m grpc_tools.protoc -I../../protos --python_out&lt;span class="o">=&lt;/span>. --pyi_out&lt;span class="o">=&lt;/span>. --grpc_python_out&lt;span class="o">=&lt;/span>. ../../protos/helloworld.proto
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The following files are regenerated.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ls -l
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--@ &lt;span class="m">1&lt;/span> xx xx &lt;span class="m">1823&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="m">1&lt;/span> 18:12 helloworld_pb2.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--@ &lt;span class="m">1&lt;/span> xx xx &lt;span class="m">578&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="m">1&lt;/span> 18:12 helloworld_pb2.pyi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--@ &lt;span class="m">1&lt;/span> xx xx &lt;span class="m">7018&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="m">1&lt;/span> 18:12 helloworld_pb2_grpc.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The &lt;code>_pd&lt;/code> file that is updated contains the auto-generated Protocol Buffers definition classes and is generally not manually modified.&lt;/p>
&lt;p>Update the &lt;code>greeter_server.py&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">concurrent&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">futures&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">logging&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">grpc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">helloworld_pb2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">helloworld_pb2_grpc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Greeter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helloworld_pb2_grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GreeterServicer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">helloworld_pb2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HelloReply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Hello, &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">!&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Add the following function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">SayHelloAgain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">helloworld_pb2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HelloReply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Hello Again, &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">!&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">serve&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;50051&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">futures&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_workers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">helloworld_pb2_grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_GreeterServicer_to_server&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Greeter&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">server&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_insecure_port&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[::]:&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Server started, listening on &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wait_for_termination&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basicConfig&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">serve&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Update the &lt;code>greeter_client.py&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># NOTE(gRPC Python Team): .close() is possible on a channel and should be&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># used in circumstances in which the with statement does not fit the needs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># of the code.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Will try to greet world ...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insecure_channel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;localhost:50051&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">helloworld_pb2_grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GreeterStub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stub&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helloworld_pb2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;you&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Greeter client received: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stub&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SayHelloAgain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">helloworld_pb2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HelloRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;you&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Greeter client received: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Restart the server and run the client.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python greeter_server.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python greeter_client.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Greeter client received: Hello, you!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Greeter client received: Hello Again, you!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The newly added method is confirmed to be functioning correctly.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This time, we researched gRPC and followed the official documentation tutorial.&lt;br>
gRPC allows for schema-first development and enables high-performance communication via HTTP/2. Recently, it has been gaining attention as an alternative to REST APIs, making it a technology worth familiarizing yourself with.&lt;/p></description></item><item><title>Introduction to ChatGPT 4o</title><link>https://bossagyu.com/en/blog/027-chatgpt-4o/</link><pubDate>Tue, 14 May 2024 23:22:39 +0900</pubDate><guid>https://bossagyu.com/en/blog/027-chatgpt-4o/</guid><description>&lt;h2 id="introduction-of-gpt-4o">Introduction of GPT-4o&lt;/h2>
&lt;p>On May 13, 2024, OpenAI announced a new GPT model, ChatGPT-4o.&lt;/p>
&lt;p>GPT-4o has the following improvements compared to previous models:&lt;/p>
&lt;ul>
&lt;li>Realization of natural conversation&lt;/li>
&lt;li>Faster response time&lt;/li>
&lt;li>Enhanced multilingual support&lt;/li>
&lt;li>Higher reliability&lt;/li>
&lt;/ul>
&lt;p>Notably, the improvements in inference speed and quality allow it to perform exceptionally well in real-time dialogue systems, enabling smoother and more natural communication.&lt;/p>
&lt;h2 id="real-time-dialogue-applications">Real-Time Dialogue Applications&lt;/h2>
&lt;p>The following video demonstrates real-time interaction with ChatGPT-4o using a smartphone.&lt;/p>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/vgYi3Wr7v_g"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;p>As you can see in the video, ChatGPT-4o can respond at a level close to human conversation.&lt;br>
This allows users to enjoy very natural conversations.&lt;/p>
&lt;p>Previously, the ChatGPT series converted voice to text and then inputted it into GPT-4 for dialogue.&lt;br>
This meant that emotional information such as tone was lost in the process.&lt;/p>
&lt;p>However, ChatGPT-4o is trained directly from voice, taking into account information such as tone, leading to more natural conversations.&lt;br>
Additionally, it returns responses directly from voice, eliminating the text interpretation step and allowing for faster responses.&lt;/p>
&lt;h2 id="enhanced-multilingual-support">Enhanced Multilingual Support&lt;/h2>
&lt;p>GPT-4o also enhances multilingual support.&lt;br>
Previously, questions asked in English received high-accuracy responses, but questions in Japanese resulted in lower accuracy.&lt;/p>
&lt;p>With the enhanced multilingual support, high-accuracy responses can now be obtained even in Japanese.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This time, we introduced ChatGPT-4o, announced by OpenAI.&lt;br>
The accuracy of the ChatGPT model has remarkably improved, feeling more and more like human conversation.&lt;br>
I believe that how well engineers can utilize generative AI will greatly affect productivity, so I will continue to monitor trends closely.&lt;/p>
&lt;h2 id="related-information">Related Information&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://openai.com/index/hello-gpt-4o/" target="_blank" rel="noopener"
>Hello ChatGPT-4o&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Migrating from Evernote to Notion</title><link>https://bossagyu.com/en/blog/026-evernote-to-notion/</link><pubDate>Mon, 29 Apr 2024 19:32:38 +0900</pubDate><guid>https://bossagyu.com/en/blog/026-evernote-to-notion/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>As of April 26, 2024, Evernote&amp;rsquo;s Japanese corporation was dissolved, which does not mean Evernote services are ending, but it certainly raises concerns about its future. Given the many restrictions on Evernote&amp;rsquo;s free plan and the cost associated with its premium plan, I considered switching to another note-taking app.&lt;/p>
&lt;p>After some deliberation, I chose Notion for the following reasons:&lt;/p>
&lt;ol>
&lt;li>It possesses all essential features required for a note-taking app and is a viable alternative to Evernote.&lt;/li>
&lt;li>Notion&amp;rsquo;s free plan is less restrictive and adequate for my needs, allowing me to cut costs on premium subscriptions.&lt;/li>
&lt;li>Notion offers an import tool specifically for Evernote, facilitating a low-cost migration.&lt;/li>
&lt;/ol>
&lt;p>This article details the process of migrating from Evernote to Notion.&lt;/p>
&lt;h2 id="migration-process">Migration Process&lt;/h2>
&lt;p>Notion provides an Evernote import feature, making the migration straightforward:&lt;/p>
&lt;h3 id="accessing-import-settings">Accessing Import Settings&lt;/h3>
&lt;p>Navigate to &lt;code>Settings&lt;/code> in the Notion app.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-001.png"
width="476"
height="109"
srcset="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-001_hue34c4fc34d425abb2cb8a7822cb5448a_12099_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-001_hue34c4fc34d425abb2cb8a7822cb5448a_12099_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Notion Settings"
class="gallery-image"
data-flex-grow="436"
data-flex-basis="1048px"
>&lt;/p>
&lt;p>Click &lt;code>Settings&lt;/code> to access the &lt;code>Import&lt;/code> option.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-002.png"
width="1107"
height="553"
srcset="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-002_hu5671edaff82d6b0627f9e68841ee4894_113782_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-002_hu5671edaff82d6b0627f9e68841ee4894_113782_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Notion Import"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="480px"
>&lt;/p>
&lt;p>After clicking on &lt;code>Import&lt;/code>, select &lt;code>Evernote&lt;/code> as the import source.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-003.png"
width="262"
height="131"
srcset="https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-003_hu22ab7887a397f6d4d5c09ac7940595a1_12909_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/026-evernote-to-notion/img-026-003_hu22ab7887a397f6d4d5c09ac7940595a1_12909_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Select Evernote"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="480px"
>&lt;/p>
&lt;h3 id="importing-notebooks">Importing Notebooks&lt;/h3>
&lt;p>Once linked, you can choose the notebooks you wish to import. Here&amp;rsquo;s a critical tip:
While it seems possible to select multiple notebooks for import, doing so may lead to excessively long processing times or even errors. Therefore, it is advisable to import one notebook at a time.&lt;/p>
&lt;p>Even when importing one notebook at a time, be prepared for the process to take several hours, depending on the size of the notebook.&lt;/p>
&lt;h3 id="post-import-review">Post-Import Review&lt;/h3>
&lt;p>After the import, the formatting, images, links, and labels were preserved well, allowing for a seamless transition to Notion.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This guide outlines the steps to migrate from Evernote to Notion. With Notion&amp;rsquo;s robust free features and straightforward migration process, it&amp;rsquo;s worth considering if you&amp;rsquo;re looking to move away from Evernote.&lt;/p></description></item><item><title>Setting Up a Global gitignore for All Projects</title><link>https://bossagyu.com/en/blog/025-git-ignore/</link><pubDate>Tue, 16 Apr 2024 23:16:25 +0900</pubDate><guid>https://bossagyu.com/en/blog/025-git-ignore/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Adding a &lt;code>.gitignore&lt;/code> file to a project allows you to exclude certain files and directories from being tracked by git. However, it can be tedious to repeatedly add default directories like &lt;code>.idea&lt;/code> generated by IDEs to &lt;code>.gitignore&lt;/code> for each new project. This article explains how to apply &lt;code>.gitignore&lt;/code> settings globally across all projects.&lt;/p>
&lt;h2 id="applying-gitignore-globally">Applying gitignore Globally&lt;/h2>
&lt;p>Git by default checks for ignore settings in &lt;code>~/.config/git/ignore&lt;/code>. Therefore, by placing your ignore configurations in this file, you can have them applied to all your projects.&lt;/p>
&lt;p>While it&amp;rsquo;s common to create a &lt;code>.gitignore_global&lt;/code> and register it under &lt;code>core.excludesfile&lt;/code>, this method requires unnecessary configuration in &lt;code>.gitconfig&lt;/code>, which is why the approach described here is recommended.&lt;/p>
&lt;h2 id="steps-to-apply-gitignore-globally">Steps to Apply gitignore Globally&lt;/h2>
&lt;h3 id="create-a-directory-for-ignore-file">Create a Directory for Ignore File&lt;/h3>
&lt;p>Create a directory to store your ignore file, if it doesn&amp;rsquo;t already exist:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mkdir -p ~/.config/git/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="create-and-configure-the-ignore-file">Create and Configure the Ignore File&lt;/h3>
&lt;p>Create the ignore file and write the patterns for files and directories you want to ignore globally:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vim ~/.config/git/ignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Example of what to include:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">.idea/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node_modules/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="applying-the-ignore-settings">Applying the Ignore Settings&lt;/h3>
&lt;p>These settings will now automatically apply to all projects managed under your user account. If there are already tracked files you wish to ignore, use &lt;code>git rm --cached&lt;/code> to stop tracking them without deleting the files.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://git-scm.com/docs/gitignore" target="_blank" rel="noopener"
>Git - gitignore&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>By following these steps, you can efficiently manage your ignore settings across all your git projects without having to replicate configurations in each project repository.&lt;/p></description></item><item><title>Using Bluesky API for Automated Posting with Python</title><link>https://bossagyu.com/en/blog/024-bluesky-api/</link><pubDate>Sun, 07 Apr 2024 23:52:09 +0900</pubDate><guid>https://bossagyu.com/en/blog/024-bluesky-api/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a class="link" href="https://bsky.app/" target="_blank" rel="noopener"
>Bluesky&lt;/a> is a decentralized social network initiated by Jack Dorsey, former CEO of Twitter.&lt;br>
Built on the &lt;a class="link" href="https://atproto.com/docs" target="_blank" rel="noopener"
>ATProtocol&lt;/a>, it can be seen as a decentralized version of Twitter, where there is no central authority. The move towards decentralization in social networking might be following the trend seen in finance, from centralized to decentralized cryptocurrencies.&lt;/p>
&lt;p>This article compiles methods for executing Bluesky&amp;rsquo;s API using Python.&lt;/p>
&lt;h2 id="steps-to-use-bluesky-api">Steps to Use Bluesky API&lt;/h2>
&lt;ul>
&lt;li>Generating an API Password&lt;/li>
&lt;li>Setting Up Python Environment&lt;/li>
&lt;li>Script Creation and Execution&lt;/li>
&lt;/ul>
&lt;h2 id="generating-an-api-password">Generating an API Password&lt;/h2>
&lt;p>To execute the API, you need to generate an API password using your account name.&lt;/p>
&lt;p>First, verify your account name displayed on your Bluesky profile, minus the initial &lt;code>@&lt;/code>. For instance, if my account is &lt;code>bossagyu.bsky.social&lt;/code>, that&amp;rsquo;s the account name I&amp;rsquo;ll use.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/024-bluesky-api/img-024-001.png"
width="1246"
height="494"
srcset="https://bossagyu.com/en/blog/024-bluesky-api/img-024-001_huf800b51d6508b8d55f734f90e398ecce_69330_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/024-bluesky-api/img-024-001_huf800b51d6508b8d55f734f90e398ecce_69330_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bluesky Account Name"
class="gallery-image"
data-flex-grow="252"
data-flex-basis="605px"
>&lt;/p>
&lt;p>Next, generate the API execution password.&lt;/p>
&lt;p>Navigate to &lt;code>Settings&lt;/code> → &lt;code>App Passwords&lt;/code> to create the password.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/024-bluesky-api/img-024-002.png"
width="702"
height="599"
srcset="https://bossagyu.com/en/blog/024-bluesky-api/img-024-002_hu4ae5c012eccb5c32725cc4f577581c4d_72656_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/024-bluesky-api/img-024-002_hu4ae5c012eccb5c32725cc4f577581c4d_72656_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bluesky App Password 1"
class="gallery-image"
data-flex-grow="117"
data-flex-basis="281px"
>&lt;/p>
&lt;p>Click &lt;code>Add App Password&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/024-bluesky-api/img-024-003.png"
width="589"
height="281"
srcset="https://bossagyu.com/en/blog/024-bluesky-api/img-024-003_hu581c5fcbb0f6fca5bc47923c36751a59_43772_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/024-bluesky-api/img-024-003_hu581c5fcbb0f6fca5bc47923c36751a59_43772_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bluesky App Password 2"
class="gallery-image"
data-flex-grow="209"
data-flex-basis="503px"
>&lt;/p>
&lt;p>After clicking the add button, name your password for management purposes. The name itself is not the password but helps with organization.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/024-bluesky-api/img-024-004.png"
width="588"
height="245"
srcset="https://bossagyu.com/en/blog/024-bluesky-api/img-024-004_hude180766a2493746a1dec1e2149d4e83_41902_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/024-bluesky-api/img-024-004_hude180766a2493746a1dec1e2149d4e83_41902_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Bluesky App Password 3"
class="gallery-image"
data-flex-grow="240"
data-flex-basis="576px"
>&lt;/p>
&lt;p>Once the password is generated, ensure to copy it as it won&amp;rsquo;t be displayed again. If you forget to copy, simply generate a new one.&lt;/p>
&lt;h2 id="setting-up-the-python-environment">Setting Up the Python Environment&lt;/h2>
&lt;p>Prepare your Python environment. For setup using venv, refer to &lt;a class="link" href="https://bossagyu.com/blog/004-paython-setup/" target="_blank" rel="noopener"
>this guide&lt;/a>.&lt;/p>
&lt;p>According to the &lt;a class="link" href="https://atproto.com/docs" target="_blank" rel="noopener"
>official documentation&lt;/a>, Python version 3.7.1 or higher is required.&lt;/p>
&lt;p>After setting up your environment, install the ATProtocol library to interact with it.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ pip install atproto
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Verify installation:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ pip list &lt;span class="p">|&lt;/span> grep atproto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">atproto 0.0.46
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With this, preparation is complete.&lt;/p>
&lt;h2 id="script-creation-and-execution">Script Creation and Execution&lt;/h2>
&lt;p>Create a script to post on Bluesky.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">atproto&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;bossagyu.bsky.social&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;*******&amp;#34;&lt;/span> &lt;span class="c1"># Enter the generated API password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Posting via API.&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s all for the script. You can now post to Bluesky using the API.&lt;/p>
&lt;p>Let&amp;rsquo;s run it:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ python post_bluesky.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Upon execution, the post successfully appears on Bluesky.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/024-bluesky-api/img-024-005.png"
width="1244"
height="512"
srcset="https://bossagyu.com/en/blog/024-bluesky-api/img-024-005_hu4f39cd8b24c00a6a84572b28046e189d_95124_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/024-bluesky-api/img-024-005_hu4f39cd8b24c00a6a84572b28046e189d_95124_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Posted on Bluesky"
class="gallery-image"
data-flex-grow="242"
data-flex-basis="583px"
>&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This article covered how to execute Bluesky&amp;rsquo;s API using Python.&lt;br>
While Bluesky is still under development, unlike Twitter, which has limitations and charges for API use, Bluesky offers a free API, making it an excellent option for those looking to experiment with social networking APIs at no cost.&lt;/p></description></item><item><title>Generating Images with ChatGPT</title><link>https://bossagyu.com/en/blog/023-chatgpt-create-image/</link><pubDate>Sun, 31 Mar 2024 17:35:07 +0900</pubDate><guid>https://bossagyu.com/en/blog/023-chatgpt-create-image/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Unlike image generation models like Stable Diffusion, ChatGPT can also generate images. This guide explains how to do so.&lt;br>
For those using the ChatGPT paid plan, images can be generated without any additional fees, allowing for the creation of commercially usable images with minimal effort.&lt;/p>
&lt;p>This tutorial utilizes DALL-E, a feature of ChatGPT Plus, to generate images.
For more information on DALL-E3, refer to OpenAI&amp;rsquo;s &lt;a class="link" href="https://openai.com/dall-e-3" target="_blank" rel="noopener"
>official page&lt;/a>.&lt;/p>
&lt;h2 id="how-to-generate-images">How to Generate Images&lt;/h2>
&lt;p>Select &amp;ldquo;Explore GPTs&amp;rdquo; from the sidebar.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-001.png"
width="265"
height="116"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-001_hud4b55173ac45fc1d51204f1be6812280_8545_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-001_hud4b55173ac45fc1d51204f1be6812280_8545_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Explore GPTs"
class="gallery-image"
data-flex-grow="228"
data-flex-basis="548px"
>&lt;/p>
&lt;p>Type &lt;code>DALL-E&lt;/code> in the search bar and perform a search.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-002.png"
width="1303"
height="365"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-002_hu7cb4a7e18b89e3c24f69774acd94f41c_41824_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-002_hu7cb4a7e18b89e3c24f69774acd94f41c_41824_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="DALL-E"
class="gallery-image"
data-flex-grow="356"
data-flex-basis="856px"
>&lt;/p>
&lt;p>Click on &amp;ldquo;Start Chat&amp;rdquo; to begin generating images.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-003.png"
width="1145"
height="540"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-003_huafd50c1ff19a49756eba7cc08e0d5a58_52595_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-003_huafd50c1ff19a49756eba7cc08e0d5a58_52595_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Start Chat"
class="gallery-image"
data-flex-grow="212"
data-flex-basis="508px"
>&lt;/p>
&lt;p>Then, simply enter a description of the image you wish to generate, and the image will be created.&lt;/p>
&lt;h2 id="generating-an-example-image">Generating an Example Image&lt;/h2>
&lt;p>Let&amp;rsquo;s try generating an image of a dog wearing pink sunglasses, as used in this blog.&lt;/p>
&lt;p>For a start, we&amp;rsquo;ll input the prompt &amp;ldquo;a dog wearing pink sunglasses&amp;rdquo;.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-004.png"
width="986"
height="599"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-004_hu5e0a02deff970890b46e4e180aa8365f_498318_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-004_hu5e0a02deff970890b46e4e180aa8365f_498318_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ChatGPT generated image 1"
class="gallery-image"
data-flex-grow="164"
data-flex-basis="395px"
>&lt;/p>
&lt;p>Additionally, like using regular ChatGPT, you can refine the generated image by entering additional prompts.&lt;br>
This time, let&amp;rsquo;s input &amp;ldquo;Make it anime-style&amp;rdquo; as an additional prompt.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-005.png"
width="1055"
height="549"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-005_hu987fb5d0bfb771c9b7617c23bc8f5dba_474840_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-005_hu987fb5d0bfb771c9b7617c23bc8f5dba_474840_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ChatGPT generated image 2"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;p>You can see it has an anime-style appearance.
By issuing further orders, you can gradually get closer to your desired image.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>This guide has explained how to generate images using ChatGPT.&lt;/p>
&lt;p>It&amp;rsquo;s incredibly convenient to be able to generate images easily, but just like with Stable Diffusion, it&amp;rsquo;s quite challenging to get the exact image you want without adjusting the prompts.
The need for prompt refinement seems less critical than with Stable Diffusion, suggesting a possible difference in model performance.&lt;/p>
&lt;p>Note that if you overuse this feature, you may receive a message asking you to wait, indicating there may be a limit on the number of generations.
For those with access to a machine source, running Stable Diffusion locally on a Mac might still be the best option.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-006.png"
width="866"
height="238"
srcset="https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-006_hue0d0043ad8a0a3a907671d165ec53110_40149_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/023-chatgpt-create-image/img-023-006_hue0d0043ad8a0a3a907671d165ec53110_40149_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ChatGPT image generation limit"
class="gallery-image"
data-flex-grow="363"
data-flex-basis="873px"
>&lt;/p></description></item><item><title>Using Enums in TypeScript</title><link>https://bossagyu.com/en/blog/022-typescript-enum/</link><pubDate>Sat, 23 Mar 2024 13:11:13 +0900</pubDate><guid>https://bossagyu.com/en/blog/022-typescript-enum/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use Enums in TypeScript.&lt;/p>
&lt;h2 id="what-are-enums">What are Enums?&lt;/h2>
&lt;p>Enums (enumerated types) represent a collection of related values. While many languages implement Enums, JavaScript does not. However, TypeScript supports Enums, enriching the JavaScript experience.&lt;/p>
&lt;h2 id="how-to-use-enums">How to Use Enums&lt;/h2>
&lt;p>Enums can be defined as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">enum&lt;/span> &lt;span class="nx">Status&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">zero&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">one&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">two&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">zero&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 0
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>By default, Enums are assigned numerical values, starting from 0. The compiled JavaScript code would look like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">Status&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;zero&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;zero&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;one&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;one&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;two&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;two&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})(&lt;/span>&lt;span class="nx">Status&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">Status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">zero&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 0
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can also assign string values to Enums:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">enum&lt;/span> &lt;span class="nx">Status&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">zero&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;zero&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">one&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;one&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">two&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;two&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">zero&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// &amp;#39;zero&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When comparing string values, you can write as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">stringZero&lt;/span>: &lt;span class="kt">String&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;zero&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">stringZero&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">StringStatus&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">StringStatus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">zero&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;value is zero&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;value is not zero&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to use Enums in TypeScript. By utilizing Enums, you can improve the readability and maintainability of your code.&lt;/p></description></item><item><title>Setting Up TypeScript Development Environment Easily with Volta</title><link>https://bossagyu.com/en/blog/021-typescript-setup/</link><pubDate>Sun, 10 Mar 2024 13:11:13 +0900</pubDate><guid>https://bossagyu.com/en/blog/021-typescript-setup/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to easily set up a TypeScript development environment using Volta, with MacOS as the target platform.&lt;/p>
&lt;h2 id="what-is-volta">What is Volta?&lt;/h2>
&lt;p>Volta is a version management tool for Node.js, featuring the following characteristics as presented on &lt;a class="link" href="https://volta.sh/" target="_blank" rel="noopener"
>Volta&amp;rsquo;s official site&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Fast: Built in Rust, enabling swift Node.js version switching.&lt;/li>
&lt;li>Reliable: Ensures everyone on a project uses the same tools.&lt;/li>
&lt;li>Universal: Can be used across package managers, node runtimes, and OSes.&lt;/li>
&lt;/ul>
&lt;p>While nodebrew has been commonly used, the use of Volta seems to be increasing lately.&lt;/p>
&lt;h2 id="installing-volta-and-nodejs">Installing Volta and Node.js&lt;/h2>
&lt;p>Installing Volta is as simple as running the following command:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl https://get.volta.sh &lt;span class="p">|&lt;/span> bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you&amp;rsquo;re using zsh and the path hasn&amp;rsquo;t been automatically set, use the following commands:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;VOLTA_HOME=$HOME/.volta&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=$VOLTA_HOME/bin:$PATH&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Verify the installation. If a version is displayed, Volta has been successfully installed:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">volta -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Next, use Volta to install Node.js. If no version is specified, the latest LTS version will be installed:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">volta install node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="installing-yarn-and-creating-a-typescript-project">Installing yarn and Creating a TypeScript Project&lt;/h2>
&lt;h3 id="differences-between-npm-and-yarn">Differences between npm and yarn&lt;/h3>
&lt;p>Both npm and yarn are package managers for Node.js. Their features include:&lt;/p>
&lt;p>&lt;strong>npm&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Released a year after Node.js (2010).&lt;/li>
&lt;li>Stands for Node Package Manager.&lt;/li>
&lt;li>Automatically generates a package-lock.json file.&lt;/li>
&lt;li>Installed automatically with Node.js.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>yarn&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Released in 2016.&lt;/li>
&lt;li>Developed by Facebook, Google, Exponent, and Tilde.&lt;/li>
&lt;li>Compatible with npm (can use the same package.json).&lt;/li>
&lt;li>More strict in locking module versions than npm.&lt;/li>
&lt;li>Faster installation than npm.&lt;/li>
&lt;/ul>
&lt;p>While yarn appears superior, recent updates to npm have minimized the differences. Here, we will use yarn to create a TypeScript project.&lt;/p>
&lt;h3 id="installing-yarn">Installing yarn&lt;/h3>
&lt;p>Install yarn using Volta:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">volta install yarn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Confirm the installation by checking if yarn is listed:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">volta list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="creating-a-typescript-project">Creating a TypeScript Project&lt;/h3>
&lt;p>Initialize yarn:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">yarn init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install Node.js:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">volta pin node@20.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install TypeScript:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">yarn add typescript
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install ts-node:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">yarn add --dev ts-node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create a tsconfig.json file. This is a TypeScript configuration file that details compilation settings. In this case, you can leave it at the default settings generated:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">yarn tsc --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Test a sample program:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;console.log(&amp;#39;Hello, TypeScript!&amp;#39;);&amp;#34;&lt;/span> &amp;gt; hello.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yarn ts-node hello.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If &amp;#34;Hello, TypeScript!&amp;#34; is displayed, it&amp;#39;s a success.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The test script ran successfully. This completes the setup of the TypeScript development environment.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article described how to set up a TypeScript development environment easily using Volta. By using Volta, managing Node.js versions becomes straightforward, making the development environment setup smoother. Additionally, specifying the Node.js version with Volta in your project&amp;rsquo;s package.json can help eliminate version discrepancies among developers, adding another layer of convenience to your workflow.&lt;/p></description></item><item><title>Explaining Capacity and Performance Management in ITIL v4</title><link>https://bossagyu.com/en/blog/020-itilv4-capacity-and-performance-management/</link><pubDate>Tue, 27 Feb 2024 08:53:36 +0900</pubDate><guid>https://bossagyu.com/en/blog/020-itilv4-capacity-and-performance-management/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains capacity and performance management as outlined in ITIL v4. I will also apply what I have understood to my own experiences, explaining the process of capacity and performance management.&lt;/p>
&lt;h2 id="what-are-capacity-and-performance-management">What are Capacity and Performance Management?&lt;/h2>
&lt;p>Capacity and Performance Management involves managing the performance of services and the resources supporting them. The goal is to optimize the performance of services and ensure that the capacity of services is appropriately maintained.&lt;/p>
&lt;h2 id="processes-in-capacity-and-performance-management">Processes in Capacity and Performance Management&lt;/h2>
&lt;p>The processes in capacity and performance management include:&lt;/p>
&lt;ul>
&lt;li>Establishing Capacity and Performance Control&lt;/li>
&lt;li>Analyzing and Improving Service Capacity and Performance&lt;/li>
&lt;/ul>
&lt;h3 id="establishing-capacity-and-performance-control">Establishing Capacity and Performance Control&lt;/h3>
&lt;p>Establishing capacity and performance control involves agreeing with stakeholders on the usage and performance standards for the IT resources used by the service, and deciding on the timing, baseline, and format for evaluation.&lt;/p>
&lt;p>It is realized through the following steps:&lt;/p>
&lt;ol>
&lt;li>Identifying service capacity and performance requirements&lt;/li>
&lt;li>Agreeing on service capacity and performance requirements&lt;/li>
&lt;li>Deciding on capacity and performance requirements&lt;/li>
&lt;li>Designing capacity and performance evaluation metrics and reports&lt;/li>
&lt;/ol>
&lt;p>Applying my experiences to these processes, I understood them as follows:&lt;/p>
&lt;ul>
&lt;li>Identifying service capacity and performance requirements
&lt;ul>
&lt;li>As an internal platform provider, I identified latency performance requirements (99%ile in Nms) demanded by internal users.&lt;/li>
&lt;li>Based on these thresholds, we conducted performance verification and measured throughput per instance.&lt;/li>
&lt;li>We calculated the cost based on the throughput measurements.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Agreeing on service capacity and performance requirements
&lt;ul>
&lt;li>We agreed on latency performance and throughput with stakeholders.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Deciding on capacity and performance requirements
&lt;ul>
&lt;li>This remained unchanged from what was agreed upon.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Designing capacity and performance evaluation metrics and reports
&lt;ul>
&lt;li>We used a tracing tool called Dynatrace to measure and report performance.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="analyzing-and-improving-service-capacity-and-performance">Analyzing and Improving Service Capacity and Performance&lt;/h3>
&lt;p>Analyze issues in usage and performance conditions from service output logs and incident information.&lt;/p>
&lt;p>It is realized through the following steps:&lt;/p>
&lt;ol>
&lt;li>Analyzing capacity and performance&lt;/li>
&lt;li>Reporting capacity and performance&lt;/li>
&lt;li>Planning and designing capacity and performance&lt;/li>
&lt;/ol>
&lt;p>Applying my experiences to these activities, I understood them as follows:&lt;/p>
&lt;ul>
&lt;li>Analyzing capacity and performance
&lt;ul>
&lt;li>We used Dynatrace to analyze latency performance and throughput.&lt;/li>
&lt;li>We identified performance issues from incident information.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Reporting capacity and performance
&lt;ul>
&lt;li>We visualized latency performance and throughput using Dynatrace&amp;rsquo;s dashboard.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Planning and designing capacity and performance
&lt;ul>
&lt;li>Anticipating growth in users, we forecasted that the current capacity would be insufficient.&lt;/li>
&lt;li>We made plans to increase capacity based on demand forecasts and executed them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>In this article, I explained capacity and performance management based on what I have learned and applied it to my own experiences. I understood that capacity and performance management involves managing aspects similar to availability management, but from the perspective of capacity and performance.&lt;br>
In my experience, discussions about performance and availability often go hand in hand, and I rarely deal with them independently.&lt;/p></description></item><item><title>How to Use Stable Diffusion Web UI on Mac</title><link>https://bossagyu.com/en/blog/019-stable-diffusion/</link><pubDate>Mon, 12 Feb 2024 11:24:59 +0900</pubDate><guid>https://bossagyu.com/en/blog/019-stable-diffusion/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article will guide you through installing Stable Diffusion Web UI on Mac and using it locally.&lt;/p>
&lt;h2 id="what-is-stable-diffusion">What is Stable Diffusion?&lt;/h2>
&lt;p>Stable Diffusion is a type of image processing technology using AI. By inputting text, it can generate images corresponding to that text.&lt;/p>
&lt;h2 id="ways-to-use-stable-diffusion">Ways to Use Stable Diffusion&lt;/h2>
&lt;p>There are two main ways to use Stable Diffusion:&lt;/p>
&lt;ul>
&lt;li>Using web applications like &lt;a class="link" href="https://huggingface.co/" target="_blank" rel="noopener"
>Hugging Face&lt;/a> or &lt;a class="link" href="https://beta.dreamstudio.ai/generate" target="_blank" rel="noopener"
>Dream Studio&lt;/a>&lt;/li>
&lt;li>Using Stable Diffusion Web UI locally&lt;/li>
&lt;/ul>
&lt;p>This article focuses on using Stable Diffusion Web UI locally. While web applications are easy for trial purposes, they might have limitations or costs for generating a significant number of images. Thus, local usage is recommended for more extensive needs.&lt;/p>
&lt;h2 id="how-to-use-stable-diffusion-web-ui-locally">How to Use Stable Diffusion Web UI Locally&lt;/h2>
&lt;p>We will use &lt;a class="link" href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noopener"
>stable-diffusion-web-ui&lt;/a> published by AUTOMATIC1111 for this purpose.&lt;/p>
&lt;ol>
&lt;li>Prepare the environment&lt;/li>
&lt;li>Install stable-diffusion-web-ui&lt;/li>
&lt;li>Place the model files&lt;/li>
&lt;li>Start stable-diffusion-web-ui and generate images&lt;/li>
&lt;/ol>
&lt;h3 id="1-preparing-the-environment">1. Preparing the Environment&lt;/h3>
&lt;p>First, we need to install Python and other necessary libraries using homebrew.&lt;/p>
&lt;p>Install homebrew:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">/bin/bash -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Set the homebrew path:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">:/opt/homebrew/bin/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install related libraries:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install cmake protobuf rust pyenv git wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Set up the Python environment using pyenv. This allows you to use multiple versions of Python. For building the Python environment, refer to &lt;a class="link" href="https://bossagyu.com/blog/004-paython-setup/" target="_blank" rel="noopener"
>this article&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv install 3.10.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv &lt;span class="nb">local&lt;/span> 3.10.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-installing-stable-diffusion-web-ui">2. Installing stable-diffusion-web-ui&lt;/h3>
&lt;p>Clone the repository using git clone:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> stable-diffusion-webui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Set up a virtual environment using venv to keep the environment clean:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -m venv venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now the environment is ready.&lt;/p>
&lt;h3 id="3-placing-the-model-files">3. Placing the Model Files&lt;/h3>
&lt;p>Next, download the model files and place them in the &lt;code>stable-diffusion-webui/models/Stable-diffusion/&lt;/code> directory. Model files can be downloaded from sites like:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://dream-studio.tech/" target="_blank" rel="noopener"
>Civitai&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://huggingface.co/models" target="_blank" rel="noopener"
>Hugging Face&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>For this example, we&amp;rsquo;ll download the &lt;code>blue_pencil&lt;/code> model from Civitai.&lt;/p>
&lt;p>Search for &lt;code>blue_pencil&lt;/code> in Civitai&amp;rsquo;s search bar, select &lt;code>blue_pencil&lt;/code> from the search results, and click the &lt;code>Download&lt;/code> button.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/019-stable-diffusion/img-019-001.png"
width="1357"
height="1019"
srcset="https://bossagyu.com/en/blog/019-stable-diffusion/img-019-001_hu0340b7643e68d89bf045571164e24a86_1170489_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/019-stable-diffusion/img-019-001_hu0340b7643e68d89bf045571164e24a86_1170489_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Download Screen"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="319px"
>&lt;/p>
&lt;p>Move the downloaded model to the directory:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mv ~/Downloads/bluePencilXL_v401.safetensors models/Stable-diffusion/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-starting-stable-diffusion-web-ui-and-generating-images">4. Starting stable-diffusion-web-ui and Generating Images&lt;/h3>
&lt;p>Finally, start stable-diffusion-web-ui and generate images:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">./webui.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After launching, input the text in the prompt and generate images:&lt;/p>
&lt;ol>
&lt;li>Select the downloaded &lt;code>blue_pencil&lt;/code> model in Stable Diffusion checkpoint.&lt;/li>
&lt;li>Enter elements you want in the image in the prompt.&lt;/li>
&lt;li>Enter elements you don&amp;rsquo;t want in the image in the Negative prompt.&lt;/li>
&lt;li>Click Generate.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/019-stable-diffusion/img-019-002.png"
width="3304"
height="1860"
srcset="https://bossagyu.com/en/blog/019-stable-diffusion/img-019-002_hu4a45a04ce22c441948fe1eb974670ec4_1576758_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/019-stable-diffusion/img-019-002_hu4a45a04ce22c441948fe1eb974670ec4_1576758_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Image Generation Screen"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>By inputting &amp;ldquo;a dog wearing pink sunglasses,&amp;rdquo; the output matched the input. You can generate various images by inputting different texts.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article introduced how to install and use Stable Diffusion Web UI on Mac locally. Using it locally allows you to generate images freely without the limitations or costs associated with web applications.&lt;/p></description></item><item><title>Explaining Business Analysis in ITIL v4</title><link>https://bossagyu.com/en/blog/018-itilv4-business-analysis/</link><pubDate>Fri, 09 Feb 2024 09:00:56 +0900</pubDate><guid>https://bossagyu.com/en/blog/018-itilv4-business-analysis/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article consolidates my learning and understanding of business analysis as per ITIL v4. I will also apply my own experiences to explain the business analysis process.&lt;/p>
&lt;h2 id="what-is-business-analysis">What is Business Analysis?&lt;/h2>
&lt;p>Business analysis involves analyzing a business or any other component to propose solutions for meeting those needs or solving business challenges. It is important to note that the term &amp;ldquo;business&amp;rdquo; analysis does not solely pertain to business entities.&lt;/p>
&lt;h2 id="examples-of-business-analysis-techniques">Examples of Business Analysis Techniques&lt;/h2>
&lt;p>Examples of business analysis techniques include:&lt;/p>
&lt;ul>
&lt;li>SWOT Analysis&lt;/li>
&lt;li>User Stories&lt;/li>
&lt;/ul>
&lt;p>For specific methods, I defer to other sites as they are not the main focus here. Personally, I often use Customer Journey Maps, although it is not listed as an example here.&lt;/p>
&lt;h2 id="the-business-analysis-process">The Business Analysis Process&lt;/h2>
&lt;p>The business analysis process includes two main processes:&lt;/p>
&lt;ul>
&lt;li>Designing and Maintaining Business Analysis Approaches&lt;/li>
&lt;li>Identifying Business Analysis and Solutions&lt;/li>
&lt;/ul>
&lt;h3 id="designing-and-maintaining-business-analysis-approaches">Designing and Maintaining Business Analysis Approaches&lt;/h3>
&lt;p>This process focuses on establishing a consistent and effective approach to business analysis by addressing the current and anticipated needs of the organization. It is executed as follows:&lt;/p>
&lt;ul>
&lt;li>Analyzing the organization and requirements&lt;/li>
&lt;li>Reviewing business analysis approach methodologies&lt;/li>
&lt;li>Implementing the business analysis approach&lt;/li>
&lt;/ul>
&lt;p>In my organization, we rarely conduct analysis at the business layer level. Generally, this process involves analyzing specific requirements using certain methodologies.&lt;/p>
&lt;h3 id="identifying-business-analysis-and-solutions">Identifying Business Analysis and Solutions&lt;/h3>
&lt;p>This process emphasizes analyzing stakeholders&amp;rsquo; needs and requirements. It includes identifying and proposing solutions to address the stakeholders&amp;rsquo; needs and requirements. It is executed as follows:&lt;/p>
&lt;ol>
&lt;li>Collecting and analyzing information from stakeholders&lt;/li>
&lt;li>Defining solution options and identifying recommended solutions&lt;/li>
&lt;li>Providing support to the solution delivery team&lt;/li>
&lt;li>Evaluating and assessing the performance of the solution&lt;/li>
&lt;/ol>
&lt;p>Applying my own experiences to these activities, I understood them as follows:&lt;/p>
&lt;h4 id="for-12">For 1,2&lt;/h4>
&lt;ul>
&lt;li>Collecting information from stakeholders and conducting analysis.&lt;/li>
&lt;li>Identifying the issues to be solved (why) from the analysis results and determining what solutions are available (what).&lt;/li>
&lt;/ul>
&lt;h4 id="for-3">For 3&lt;/h4>
&lt;ul>
&lt;li>Considering how to solve the identified why and what with the product team.&lt;/li>
&lt;li>Deciding on the resolution method and evaluation criteria to determine how success will be measured.&lt;/li>
&lt;/ul>
&lt;h4 id="for-4">For 4&lt;/h4>
&lt;ul>
&lt;li>Regularly evaluating how well the solution meets the established criteria.&lt;/li>
&lt;li>I recommend automating data collection and visualizing it with tools like Grafana for visibility.&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained business analysis based on my learning and experiences. Personally, I&amp;rsquo;ve understood that business analysis does not only target businesses and includes processes beyond analysis.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.axelos.com/resource-hub/practice/business-analysis-management-itil-4-practice-guide" target="_blank" rel="noopener"
>Business analysis management: ITIL 4 Practice Guide&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Setting Up and Using GitHub Copilot in VSCode</title><link>https://bossagyu.com/en/blog/017-vscode-copilot/</link><pubDate>Sun, 04 Feb 2024 22:34:51 +0900</pubDate><guid>https://bossagyu.com/en/blog/017-vscode-copilot/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to set up and use GitHub Copilot in VSCode. A GitHub Copilot account is required as a prerequisite.&lt;/p>
&lt;h2 id="getting-started-with-github-copilot-in-vscode">Getting Started with GitHub Copilot in VSCode&lt;/h2>
&lt;h3 id="installing-the-extension">Installing the Extension&lt;/h3>
&lt;p>First, you need to install the extension in VSCode.
Open VSCode, click on the icon with four squares in the left menu, enter &amp;ldquo;copilot&amp;rdquo; in the search text input, and click &amp;ldquo;install&amp;rdquo; to start the installation.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-001.png"
width="626"
height="267"
srcset="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-001_hua2075257b737ae41d41cddc9273959b8_30520_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/017-vscode-copilot/img-017-001_hua2075257b737ae41d41cddc9273959b8_30520_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Extension"
class="gallery-image"
data-flex-grow="234"
data-flex-basis="562px"
>&lt;/p>
&lt;h3 id="linking-with-github">Linking with GitHub&lt;/h3>
&lt;p>After clicking install and completing the installation, the following screen will appear. Click on &amp;ldquo;Sign in to GitHub.&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-002.png"
width="574"
height="141"
srcset="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-002_hud50fff9149b461526033d19f8d6aa177_7541_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/017-vscode-copilot/img-017-002_hud50fff9149b461526033d19f8d6aa177_7541_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Sing in to GitHub Screen"
class="gallery-image"
data-flex-grow="407"
data-flex-basis="977px"
>&lt;/p>
&lt;p>You will be asked to allow access to your GitHub account. Click &amp;ldquo;Allow&amp;rdquo; to grant permission.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-003.png"
width="984"
height="245"
srcset="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-003_hu2ee054375fc09dad64838e766feb723e_62679_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/017-vscode-copilot/img-017-003_hu2ee054375fc09dad64838e766feb723e_62679_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Access Permission Screen"
class="gallery-image"
data-flex-grow="401"
data-flex-basis="963px"
>&lt;/p>
&lt;p>Click &amp;ldquo;Authorize Visual Studio Code&amp;rdquo; to give permission.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-004.png"
width="653"
height="735"
srcset="https://bossagyu.com/en/blog/017-vscode-copilot/img-017-004_hu681f1d2b9e85acefcddbdd060977aa52_52159_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/017-vscode-copilot/img-017-004_hu681f1d2b9e85acefcddbdd060977aa52_52159_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Confirmation Screen"
class="gallery-image"
data-flex-grow="88"
data-flex-basis="213px"
>&lt;/p>
&lt;p>This completes the integration of GitHub Copilot with VSCode, and you&amp;rsquo;re now ready to use it.&lt;/p>
&lt;h2 id="how-to-use">How to Use&lt;/h2>
&lt;p>Basically, as you write code, suggestions will automatically appear.
Use the following commands to write code efficiently with the suggested completions.&lt;/p>
&lt;h3 id="cheat-sheet">Cheat Sheet&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function&lt;/th>
&lt;th>Key&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Accept suggestion&lt;/td>
&lt;td>Tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reject suggestion&lt;/td>
&lt;td>Esc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Open Copilot&lt;/td>
&lt;td>Ctrl + Enter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Next suggestion&lt;/td>
&lt;td>Alt/Option + ]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Previous suggestion&lt;/td>
&lt;td>Alt/Option + [&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trigger inline Copilot&lt;/td>
&lt;td>Alt/Option + \&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article covered how to set up and use GitHub Copilot in VSCode.&lt;br>
GitHub Copilot not only provides code completions but also assists with writing text.&lt;/p>
&lt;p>This blog was also written with the assistance of GitHub Copilot, significantly improving efficiency.&lt;br>
Give it a try and see how it can help you.&lt;/p></description></item><item><title>Understanding Availability Management in ITIL v4</title><link>https://bossagyu.com/en/blog/016-itilv4-availability-management/</link><pubDate>Tue, 30 Jan 2024 20:34:58 +0900</pubDate><guid>https://bossagyu.com/en/blog/016-itilv4-availability-management/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains availability management as defined in ITIL v4. I will also relate my own experiences to explain the processes involved in availability management.&lt;/p>
&lt;h2 id="what-is-availability-management">What is Availability Management?&lt;/h2>
&lt;p>Availability management involves activities to ensure the availability of a service. The objective of availability management is to ensure that the service delivers an agreed level of availability to meet the needs of customers and users.&lt;/p>
&lt;h2 id="processes-in-availability-management">Processes in Availability Management&lt;/h2>
&lt;p>There are two main processes in availability management:&lt;/p>
&lt;ul>
&lt;li>Establishing Service Availability Control&lt;/li>
&lt;li>Analyzing and Improving Service Availability&lt;/li>
&lt;/ul>
&lt;h3 id="establishing-service-availability-control">Establishing Service Availability Control&lt;/h3>
&lt;p>Establishing service availability control ensures the availability of a service. It is realized through the following steps:&lt;/p>
&lt;ol>
&lt;li>Identifying service availability requirements&lt;/li>
&lt;li>Agreeing on service availability requirements&lt;/li>
&lt;li>Deciding on availability measurement requirements&lt;/li>
&lt;li>Designing availability metrics and reporting&lt;/li>
&lt;/ol>
&lt;p>Applying my own experiences to these processes, I understood them as follows:&lt;/p>
&lt;ul>
&lt;li>Identifying service availability requirements
&lt;ul>
&lt;li>Identifying the types of users and the business risks of service downtime.&lt;/li>
&lt;li>For my service, which is an internal platform, I identified the impacts on various services using the platform.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Agreeing on service availability requirements
&lt;ul>
&lt;li>Agreeing on the service&amp;rsquo;s availability (e.g., 99% uptime) in the form of an SLA.&lt;/li>
&lt;li>We also clarified downtime criteria and exceptions for uptime calculations.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Deciding on availability measurement requirements
&lt;ul>
&lt;li>As the availability requirements were agreed upon earlier, there were no specific measurement requirements.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Designing availability metrics and reporting
&lt;ul>
&lt;li>Primarily designed around the &amp;lsquo;downtime/uptime&amp;rsquo; formula.&lt;/li>
&lt;li>For reporting, we created a dashboard to visualize the availability metrics.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="analyzing-and-improving-service-availability">Analyzing and Improving Service Availability&lt;/h3>
&lt;p>This process, as the name suggests, involves analyzing and improving service availability. It is realized through the following steps:&lt;/p>
&lt;ol>
&lt;li>Analyzing service availability&lt;/li>
&lt;li>Reporting on service availability&lt;/li>
&lt;li>Planning and designing for service availability&lt;/li>
&lt;/ol>
&lt;p>Applying my own experiences to these processes, I understood them as follows:&lt;/p>
&lt;ul>
&lt;li>Analyzing service availability
&lt;ul>
&lt;li>Confirming that service availability is being achieved and compiling the data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Reporting on service availability
&lt;ul>
&lt;li>Reflecting availability on a dashboard that is accessible to everyone.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Planning and designing for service availability
&lt;ul>
&lt;li>In case of incidents that affect availability, we formulated plans for prevention of recurrence.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.axelos.com/resource-hub/practice/availability-management-itil-4-practice-guide" target="_blank" rel="noopener"
>Availability management: ITIL 4 Practice Guide&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Checking for the Existence of an Object in S3</title><link>https://bossagyu.com/en/blog/015-s3-object-check/</link><pubDate>Sat, 27 Jan 2024 21:41:37 +0900</pubDate><guid>https://bossagyu.com/en/blog/015-s3-object-check/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This page explains how to check for the existence of an object in S3 using Python.&lt;/p>
&lt;h2 id="method-using-boto3">Method Using boto3&lt;/h2>
&lt;p>To check using &lt;code>boto3.resource&lt;/code>, you can use the following code:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">boto3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;s3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;bucket_name&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;object_name&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;True&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ClientError&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">error_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Error&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;Code&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">error_code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;404&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Object does not exist.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;An error occurred: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you&amp;rsquo;re using &lt;code>boto3.client&lt;/code>, you can check with this code:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">boto3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;s3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Bucket&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;bucket_name&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;object_name&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;True&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ClientError&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">error_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Error&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;Code&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">error_code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;404&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Object does not exist.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;An error occurred: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://stackoverflow.com/questions/33842944/check-if-a-key-exists-in-a-bucket-in-s3-using-boto3" target="_blank" rel="noopener"
>check if a file exists in s3 bucket using boto3&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Integrating AWS API Gateway with Lambda</title><link>https://bossagyu.com/en/blog/014-aws-apigateway-lambda/</link><pubDate>Sat, 13 Jan 2024 18:06:52 +0900</pubDate><guid>https://bossagyu.com/en/blog/014-aws-apigateway-lambda/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Integrating AWS API Gateway with Lambda enables you to call Lambda functions from API Gateway. This article introduces how to integrate AWS API Gateway with Lambda.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>It is assumed that the Lambda function has already been created. If not, please refer to the following article for creation:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/getting-started.html" target="_blank" rel="noopener"
>Creating an AWS Lambda function&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="deciding-how-to-integrate-api-gateway-with-lambda">Deciding How to Integrate API Gateway with Lambda&lt;/h2>
&lt;p>When integrating API Gateway with Lambda, you need to consider the following two points:&lt;/p>
&lt;ol>
&lt;li>The request format for API Gateway&lt;/li>
&lt;li>Whether to use Proxy Integration or Non-Proxy Integration&lt;/li>
&lt;/ol>
&lt;h3 id="request-format-for-api-gateway">Request Format for API Gateway&lt;/h3>
&lt;p>You can choose from the following formats:&lt;/p>
&lt;ul>
&lt;li>REST API&lt;/li>
&lt;li>HTTP API&lt;/li>
&lt;li>WebSocket API&lt;/li>
&lt;/ul>
&lt;p>If you choose to use the REST API format, you will need to decide between REST API and HTTP API. While REST API has more features, it is more expensive than HTTP API. HTTP API is a good choice for simpler requirements.&lt;/p>
&lt;p>For a detailed comparison, please refer to the &lt;a class="link" href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html" target="_blank" rel="noopener"
>official documentation&lt;/a>.&lt;/p>
&lt;h2 id="proxy-vs-non-proxy-integration">Proxy vs. Non-Proxy Integration&lt;/h2>
&lt;p>Using Proxy Integration standardizes the format of the response returned from Lambda. It is generally recommended to use Proxy Integration.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html" target="_blank" rel="noopener"
>Setting up Lambda Proxy Integrations in API Gateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>After creating the Lambda function, select &amp;ldquo;Add Trigger.&amp;rdquo;&lt;br>
&lt;img src="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-001.png"
width="3298"
height="980"
srcset="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-001_hu7a602e3d547dfd28cd38c53d38cddce0_223431_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-001_hu7a602e3d547dfd28cd38c53d38cddce0_223431_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Add Lambda Trigger"
class="gallery-image"
data-flex-grow="336"
data-flex-basis="807px"
>&lt;/p>
&lt;p>Choose API Gateway.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-002.png"
width="966"
height="522"
srcset="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-002_hu446ae81980eb6a0d259b3af0f9d88117_59141_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-002_hu446ae81980eb6a0d259b3af0f9d88117_59141_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Select API Gateway"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="444px"
>&lt;/p>
&lt;p>Configure the trigger addition as shown below.
&lt;img src="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-003.png"
width="892"
height="1203"
srcset="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-003_hu45d67fc282f3323f6fa435777af50650_166604_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-003_hu45d67fc282f3323f6fa435777af50650_166604_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="API Gateway Configuration"
class="gallery-image"
data-flex-grow="74"
data-flex-basis="177px"
>&lt;/p>
&lt;p>Once configured successfully, the screen should look like this.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-004.png"
width="1396"
height="969"
srcset="https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-004_hu4410e1ba85bd0e88e16bb309c05ab865_175168_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/014-aws-apigateway-lambda/img-014-004_hu4410e1ba85bd0e88e16bb309c05ab865_175168_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="API Gateway Configuration Complete"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>&lt;/p>
&lt;p>Access the &lt;code>API endpoint&lt;/code> listed with a tool like curl to execute the Lambda function.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ curl https://xxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/default/apigateway-get-sample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;Hello from Lambda!&amp;#34;&lt;/span>%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article introduced how to integrate AWS API Gateway with Lambda. By integrating with API Gateway, you can externally invoke Lambda functions at any time.&lt;/p></description></item><item><title>Contact</title><link>https://bossagyu.com/en/others/contact/</link><pubDate>Mon, 08 Jan 2024 21:55:15 +0900</pubDate><guid>https://bossagyu.com/en/others/contact/</guid><description>&lt;p>For inquiries, please contact me via Direct Message (DM) on Twitter.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://twitter.com/bossagyu" target="_blank" rel="noopener"
>@bossagyu&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>How to Create a Product Strategy</title><link>https://bossagyu.com/en/blog/013-good-strategy-bad-strategy/</link><pubDate>Mon, 08 Jan 2024 21:55:15 +0900</pubDate><guid>https://bossagyu.com/en/blog/013-good-strategy-bad-strategy/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article summarizes how to create a good product strategy, based on the book &amp;ldquo;Good Strategy Bad Strategy.&amp;rdquo;&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>As a product owner in my job, I took over a product from the previous owner. The product lacked a clear strategy and direction, prompting me to develop a new product strategy.&lt;/p>
&lt;p>While developing the strategy, I realized that the term &amp;ldquo;strategy&amp;rdquo; is interpreted in various ways by different people, often used loosely in many contexts. To understand what constitutes a good strategy, I referred to &amp;ldquo;Good Strategy Bad Strategy.&amp;rdquo;&lt;/p>
&lt;h2 id="what-is-a-good-strategy">What is a Good Strategy?&lt;/h2>
&lt;p>A good strategy identifies critical points where concerted efforts can significantly boost the effect of one’s actions. A strategy should show the direction for an organization to move forward.&lt;/p>
&lt;p>A good strategy has three basic structures:&lt;/p>
&lt;ul>
&lt;li>Diagnosis&lt;/li>
&lt;li>Guiding Policy&lt;/li>
&lt;li>Actions&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/013-good-strategy-bad-strategy/img-013-001-en.png"
width="1798"
height="774"
srcset="https://bossagyu.com/en/blog/013-good-strategy-bad-strategy/img-013-001-en_hu680e7b02c44958a4bc711ee8c4490ebe_136397_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/013-good-strategy-bad-strategy/img-013-001-en_hu680e7b02c44958a4bc711ee8c4490ebe_136397_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Good Strategy&amp;rsquo;s Three Basic Structures"
class="gallery-image"
data-flex-grow="232"
data-flex-basis="557px"
>&lt;/p>
&lt;h3 id="diagnosis">Diagnosis&lt;/h3>
&lt;p>Diagnosis involves assessing the situation to identify the key challenges to address. A good diagnosis separates crucial issues from the complex mix of problems and simplifies them.&lt;/p>
&lt;p>Most of the strategy work lies in figuring out what is happening. Gathering information is crucial. Although the book criticizes consultants&amp;rsquo; frameworks, I find them useful in organizing information after thorough collection.&lt;/p>
&lt;p>In creating my product strategy, I used SWOT analysis and Impact Mapping to organize the current situation and the impact of existing strategies.&lt;/p>
&lt;p>For more on these methods, refer to the following resources:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.innovation.co.jp/urumo/swot/" target="_blank" rel="noopener"
>SWOT Analysis&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://amzn.asia/d/0FygsZ4" target="_blank" rel="noopener"
>Impact Mapping&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="guiding-policy">Guiding Policy&lt;/h3>
&lt;p>The guiding policy outlines how to approach the challenges identified in the diagnosis. A good policy is not about goals or visions but about how to face challenges and exclude other options. It focuses efforts on a decisive point to achieve a significant effect.&lt;/p>
&lt;p>A good strategy clearly shows where resources will be allocated according to the strategy.&lt;/p>
&lt;p>In my case, I defined the product direction based on the current situation and vision, focusing on specific target segments and values to offer.&lt;/p>
&lt;h3 id="actions">Actions&lt;/h3>
&lt;p>Actions are a coherent set of steps designed to execute the guiding policy. A strategy coordinates all actions to implement the policy effectively.&lt;/p>
&lt;p>A good strategy includes guidelines for implementing actions.&lt;/p>
&lt;h3 id="my-strategy">My Strategy&lt;/h3>
&lt;p>Based on the above, I developed the following strategy (partially obscured as it was for my company):&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Reduce the new user cost of using xx function.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This simple strategy meets the three basic structures of a good strategy:&lt;/p>
&lt;ul>
&lt;li>Diagnosis
&lt;ul>
&lt;li>Identified increasing new users of xx as critical for the company&amp;rsquo;s benefit.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Guiding Policy
&lt;ul>
&lt;li>Decided to lower the onboarding cost to acquire new users.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Actions
&lt;ul>
&lt;li>Prioritized several approaches to realize the policy.&lt;/li>
&lt;li>Although it could have included more action-oriented words, I decided on the above.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-a-bad-strategy">What is a Bad Strategy&lt;/h2>
&lt;p>Finally, let&amp;rsquo;s touch on common patterns of bad strategies:&lt;/p>
&lt;p>Characteristics of a Bad Strategy:&lt;/p>
&lt;ul>
&lt;li>Vague
&lt;ul>
&lt;li>Uses jargon or industry terms to obscure simple facts.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Avoids Significant Problems
&lt;ul>
&lt;li>Strategy should overcome difficult challenges and obstacles.&lt;/li>
&lt;li>Strategies focusing only on attainability are bad.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Confuses Goals with Strategy
&lt;ul>
&lt;li>For instance, a 10% revenue increase is a goal, not a strategy.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sets Wrong Strategic Objectives
&lt;ul>
&lt;li>Strategies set without sufficient investigation of causes and surroundings.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article summarized how to create a good product strategy based on &amp;ldquo;Good Strategy Bad Strategy.&amp;rdquo; Creating a good strategy might not happen at once. However, not having a strategy is like running blindly, unable to judge whether actions are successful or not.&lt;/p>
&lt;p>It&amp;rsquo;s important to start with a basic strategy, constantly observe surroundings, and update the strategy to define the direction for your product and organization.&lt;/p></description></item><item><title>Privacy Policy</title><link>https://bossagyu.com/en/others/privacy-policy/</link><pubDate>Mon, 08 Jan 2024 21:55:15 +0900</pubDate><guid>https://bossagyu.com/en/others/privacy-policy/</guid><description>&lt;p>Bossagyu Blog (hereinafter referred to as &amp;ldquo;this site&amp;rdquo;) establishes the following privacy policy (hereinafter referred to as &amp;ldquo;this policy&amp;rdquo;) regarding the handling of users&amp;rsquo; personal information in the services provided on this website (hereinafter referred to as &amp;ldquo;the service&amp;rdquo;).&lt;/p>
&lt;h2 id="article-1-personal-information">Article 1 (Personal Information)&lt;/h2>
&lt;p>&amp;ldquo;Personal information&amp;rdquo; refers to &amp;ldquo;personal information&amp;rdquo; as defined in the Personal Information Protection Law, which is information about a living individual that can identify the specific individual by name, date of birth, address, telephone number, contact information, and other descriptions contained in such information, as well as data related to appearance, fingerprints, voice prints, and health insurance card insurer numbers that can identify the specific individual based on that information alone (personal identification information).&lt;/p>
&lt;h2 id="article-2-method-of-collecting-personal-information">Article 2 (Method of Collecting Personal Information)&lt;/h2>
&lt;p>This site may ask for personal information such as name, address, telephone number, and email address when users register for use. In addition, transaction records and payment information containing users&amp;rsquo; personal information made between users and partners may be collected from partners of this site (including information providers, advertisers, advertisement delivery destinations, etc., hereinafter referred to as &amp;ldquo;partners&amp;rdquo;).&lt;/p>
&lt;h3 id="cookie">Cookie&lt;/h3>
&lt;p>This site uses access analysis services, various affiliate programs, and advertisement delivery services. These advertisement delivery companies may use Cookies to display advertisements for products and services tailored to users&amp;rsquo; interests based on users&amp;rsquo; access to this site and other sites.&lt;/p>
&lt;p>Cookies are stored on the user&amp;rsquo;s computer or device when the user visits this site or other sites. However, this information does not contain anything that can personally identify you, such as your name, address, email address, or telephone number.&lt;/p>
&lt;p>If you prefer not to have information collected through Cookies, you can refuse to accept Cookies in your browser settings. However, some content may not function correctly or services may not be available with this setting. Please understand this in advance.&lt;/p>
&lt;p>For setting methods, please check &lt;a class="link" href="https://policies.google.com/technologies/partner-sites?hl=ja" target="_blank" rel="noopener"
>Google Policies and Terms&lt;/a>.&lt;/p>
&lt;h3 id="about-access-analysis-tools">About Access Analysis Tools&lt;/h3>
&lt;p>This site uses Google&amp;rsquo;s access analysis tool &amp;ldquo;Google Analytics&amp;rdquo;. Google Analytics uses Cookies to collect traffic data. This traffic data is collected anonymously and is not personally identifiable.&lt;/p>
&lt;p>Users can refuse data collection by disabling Cookies. Please check the settings in your browser.&lt;/p>
&lt;p>You can check the terms of this policy at &lt;a class="link" href="https://marketingplatform.google.com/about/analytics/terms/jp/" target="_blank" rel="noopener"
>Google Analytics Terms of Service&lt;/a> and &lt;a class="link" href="https://policies.google.com/technologies/partner-sites?hl=ja" target="_blank" rel="noopener"
>Google Policies and Terms&lt;/a>.&lt;/p>
&lt;h2 id="article-3-matters-concerning-partners-of-this-site">Article 3 (Matters Concerning Partners of This Site)&lt;/h2>
&lt;h3 id="1-about-advertisement-delivery">1. About Advertisement Delivery&lt;/h3>
&lt;p>This site uses a third-party advertisement delivery service &amp;ldquo;Google Adsense Google AdSense&amp;rdquo;. Advertisement delivery companies may use Cookies to display advertisements according to user interests. For disabling Cookies and more details about Google AdSense, please see &lt;a class="link" href="https://policies.google.com/technologies/partner-sites?hl=ja" target="_blank" rel="noopener"
>Advertising – Policies and Terms – Google&lt;/a>.&lt;/p>
&lt;p>Also, this site participates in the Amazon Associate Program, an affiliate program designed to provide a means for sites to earn referral fees by advertising and linking to Amazon.co.jp. Third parties may provide content and advertisements, collect information directly from visitors, and set or recognize Cookies in visitors&amp;rsquo; browsers.&lt;/p>
&lt;h2 id="article-4-purpose-of-collecting-and-using-personal-information">Article 4 (Purpose of Collecting and Using Personal Information)&lt;/h2>
&lt;p>The purposes for which this site collects and uses personal information are as follows:&lt;/p>
&lt;ol>
&lt;li>To provide and operate our site services.&lt;/li>
&lt;li>To respond to user inquiries (including verifying the identity of the person).&lt;/li>
&lt;li>To allow users to view, modify, delete their registration information, and view usage status.&lt;/li>
&lt;li>For purposes incidental to the above usage purposes.&lt;/li>
&lt;/ol>
&lt;h2 id="article-5-changes-to-the-purpose-of-use">Article 5 (Changes to the Purpose of Use)&lt;/h2>
&lt;ol>
&lt;li>This site will change the purpose of use of personal information only when it is reasonably recognized that the purpose of use is related to that before the change.&lt;/li>
&lt;li>If the purpose of use is changed, the user will be notified or announced on this website in the method prescribed by the site.&lt;/li>
&lt;/ol>
&lt;h2 id="article-6-provision-of-personal-information-to-third-parties">Article 6 (Provision of Personal Information to Third Parties)&lt;/h2>
&lt;ol>
&lt;li>This site will not provide personal information to third parties without the prior consent of the user, except in cases permitted by the Personal Information Protection Law and other laws. However, the following cases are excluded:
&lt;ol>
&lt;li>When it is necessary for the protection of a person&amp;rsquo;s life, body, or property, and it is difficult to obtain the consent of the person.&lt;/li>
&lt;li>When it is particularly necessary for improving public health or promoting the healthy development of children, and it is difficult to obtain the consent of the person.&lt;/li>
&lt;li>When it is necessary for a national institution or local public entity or a person entrusted by them to cooperate in carrying out the affairs prescribed by laws and regulations,&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>and obtaining the consent of the person may impede the execution of the affairs.
4. When the following matters have been notified or announced in advance, and the site has notified the Personal Information Protection Commission:
1. Including provision to third parties in the purpose of use.
2. Items of data provided to third parties.
3. Means or method of provision to third parties.
4. Stopping the provision of personal information to third parties upon the request of the person.
5. How to accept the request of the person.&lt;/p>
&lt;h2 id="article-7-disclosure-of-personal-information">Article 7 (Disclosure of Personal Information)&lt;/h2>
&lt;ol>
&lt;li>This site will disclose personal information to the individual without delay upon request. However, all or part of the information may not be disclosed if disclosure would result in any of the following. If a decision is made not to disclose, the site will notify the person without delay.
&lt;ol>
&lt;li>If there is a risk of harming the life, body, property, or other rights and interests of the person or a third party.&lt;/li>
&lt;li>If there is a significant impediment to the proper execution of the business of the site.&lt;/li>
&lt;li>If it violates other laws and regulations.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Notwithstanding the provisions of the preceding paragraph, in principle, information other than personal information such as history information and characteristic information will not be disclosed.&lt;/li>
&lt;/ol>
&lt;h2 id="article-8-correction-and-deletion-of-personal-information">Article 8 (Correction and Deletion of Personal Information)&lt;/h2>
&lt;ol>
&lt;li>Users can request the site to correct, add, or delete (hereinafter referred to as &amp;ldquo;correction, etc.&amp;rdquo;) their personal information held by the site if it is incorrect information, in accordance with the procedures set by the site.&lt;/li>
&lt;li>This site will make the correction, etc., of the personal information without delay if it is deemed necessary to respond to the request from the user.&lt;/li>
&lt;li>This site will notify the user without delay if the correction, etc., has been made based on the provisions of the preceding paragraph, or if it has been decided not to make the correction, etc.&lt;/li>
&lt;/ol>
&lt;h2 id="article-10-changes-to-the-privacy-policy">Article 10 (Changes to the Privacy Policy)&lt;/h2>
&lt;ol>
&lt;li>The contents of this policy can be changed without notifying the user, except for laws and other matters expressly provided in this policy.&lt;/li>
&lt;li>The changed privacy policy will take effect from the time it is posted on this website unless otherwise specified by the site.&lt;/li>
&lt;/ol>
&lt;h2 id="article-11-copyright-notice">Article 11 Copyright Notice&lt;/h2>
&lt;p>The copyright of the contents of this site (photos, images, text, etc.) belongs to this site, and unauthorized reproduction is prohibited.&lt;/p>
&lt;p>If you wish to use the content of this site, please contact us separately.&lt;/p>
&lt;h2 id="article-12-about-links">Article 12 About Links&lt;/h2>
&lt;p>This site is completely link-free. No permission or contact is required to link to this site.&lt;/p>
&lt;h2 id="article-11-inquiry-desk">Article 11 (Inquiry Desk)&lt;/h2>
&lt;p>For inquiries regarding this policy, please contact us at &lt;a class="link" href="https://bossagyu.com/others/contact/" target="_blank" rel="noopener"
>Inquiries&lt;/a> on this site.&lt;/p></description></item><item><title>Setting Up Twitter Social Cards</title><link>https://bossagyu.com/en/blog/012-social-card/</link><pubDate>Sat, 06 Jan 2024 21:45:12 +0900</pubDate><guid>https://bossagyu.com/en/blog/012-social-card/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to set up Twitter Social Cards for a blog created with Hugo.&lt;/p>
&lt;h2 id="what-is-a-twitter-social-card">What is a Twitter Social Card?&lt;/h2>
&lt;p>A Twitter Social Card is an image that is displayed when an article is shared on Twitter. The image below is an example of a Twitter Social Card.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/012-social-card/img-012-001.png"
width="602"
height="220"
srcset="https://bossagyu.com/en/blog/012-social-card/img-012-001_hua2e3d73bb1829d9bc1818e9b476a1657_53764_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/012-social-card/img-012-001_hua2e3d73bb1829d9bc1818e9b476a1657_53764_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Twitter Social Card"
class="gallery-image"
data-flex-grow="273"
data-flex-basis="656px"
>&lt;/p>
&lt;p>There are several types of Twitter Social Cards, including:&lt;/p>
&lt;ul>
&lt;li>Summary Card&lt;/li>
&lt;li>Summary Card with Large Image&lt;/li>
&lt;li>App Card&lt;/li>
&lt;li>Player Card&lt;/li>
&lt;/ul>
&lt;p>For sharing blog posts, the most commonly used types are Summary Card and Summary Card with Large Image.&lt;/p>
&lt;p>For more details on each card type, refer to Twitter&amp;rsquo;s &lt;a class="link" href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards" target="_blank" rel="noopener"
>official documentation&lt;/a>.&lt;/p>
&lt;h2 id="how-to-set-up-twitter-social-cards">How to Set Up Twitter Social Cards&lt;/h2>
&lt;p>There are two main methods to set up Twitter Social Cards:&lt;/p>
&lt;ul>
&lt;li>Setting up through the theme&lt;/li>
&lt;li>Setting up independently of the theme&lt;/li>
&lt;/ul>
&lt;h3 id="setting-up-through-the-theme">Setting Up Through the Theme&lt;/h3>
&lt;p>Some themes allow you to set up Twitter Social Cards directly.&lt;/p>
&lt;p>For this example, I&amp;rsquo;ll use the &lt;a class="link" href="https://themes.gohugo.io/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a> theme that I&amp;rsquo;m using. In Stack, you can configure Twitter Social Cards in &lt;code>config.toml&lt;/code> as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">opengraph&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">twitter&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">site&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">card&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;summary&amp;#34;&lt;/span> &lt;span class="c"># summary or summary_large_image&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">defaultImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opengraph&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">enabled&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">local&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">src&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/images/share.webp&amp;#34;&lt;/span> &lt;span class="c"># Path to the default image you want to set&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="setting-up-independently-of-the-theme">Setting Up Independently of the Theme&lt;/h3>
&lt;p>If your theme doesn’t support Twitter Social Card settings, you will need to implement it yourself.&lt;/p>
&lt;p>Hugo’s official &lt;a class="link" href="https://github.com/gohugoio/hugo/blob/master/tpl/tplimpl/embedded/templates/twitter_cards.html" target="_blank" rel="noopener"
>template for implementation&lt;/a> is available, which you can use for an easy setup.&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>If the settings don’t seem to work, it might be due to incorrect implementation or the meta tags not being properly set. In such cases, use the &lt;a class="link" href="https://cards-dev.twitter.com/validator" target="_blank" rel="noopener"
>debugging tool&lt;/a> provided by Twitter to check if the settings have been correctly applied.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to set up Twitter Social Cards for a blog created with Hugo. Setting up Social Cards can enhance the visibility of your shared articles on Twitter, potentially attracting more readers, so it&amp;rsquo;s definitely worth doing.&lt;/p></description></item><item><title>Using ChatGPT to Make a Hugo Blog Multilingual</title><link>https://bossagyu.com/en/blog/011-hugo-multilingul-support/</link><pubDate>Sun, 31 Dec 2023 20:46:36 +0900</pubDate><guid>https://bossagyu.com/en/blog/011-hugo-multilingul-support/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use ChatGPT to make a blog created with Hugo multilingual.&lt;/p>
&lt;h2 id="translating-articles-into-english-with-chatgpt">Translating Articles into English with ChatGPT&lt;/h2>
&lt;p>You can translate articles written in Markdown into English using &lt;a class="link" href="https://chat.openai.com/" target="_blank" rel="noopener"
>ChatGPT&lt;/a>. When doing so, use the following prompt to ensure that the format remains intact:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Please translate this Markdown into English without altering its format.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ensure that no extraneous output is included.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Present the translated content in a format that can be easily copied.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Paste your article in Japanese, and ChatGPT will output the translated Markdown. You can copy the output directly by clicking the copy button at the bottom left of the output.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/011-hugo-multilingul-support/img-011-001.png"
width="1542"
height="516"
srcset="https://bossagyu.com/en/blog/011-hugo-multilingul-support/img-011-001_hu712801eb1dd59e23992097ade27112d6_94833_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/011-hugo-multilingul-support/img-011-001_hu712801eb1dd59e23992097ade27112d6_94833_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ChatGPT Screen"
class="gallery-image"
data-flex-grow="298"
data-flex-basis="717px"
>&lt;/p>
&lt;p>It is highly recommended to use GPT-4 instead of GPT-3.5, despite the subscription cost. GPT-4 significantly outperforms GPT-3.5 in providing accurate responses, making it useful for purposes beyond just translation.&lt;/p>
&lt;h2 id="making-hugo-multilingual">Making Hugo Multilingual&lt;/h2>
&lt;p>Here are the steps to make your Hugo site multilingual.&lt;/p>
&lt;h3 id="creating-configuration-files">Creating Configuration Files&lt;/h3>
&lt;p>Add the following settings to your config.toml:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set the default language, without this setting English is assumed default.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">defaultContentLanguage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;jp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Set configurations for each language&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">jp&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Bossagyu Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">languageName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ja-jp 🇯🇵&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LanguageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ja-jp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contentDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span> &lt;span class="c"># Directory for Japanese blog articles&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">jp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">en&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Bossagyu Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">languageName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;en-US 🇺🇸&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LanguageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;en-US&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contentDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;content.en&amp;#34;&lt;/span> &lt;span class="c"># Directory for English blog articles&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">en&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With the above settings, you can write Japanese articles in the &lt;code>content&lt;/code> directory and English articles in the &lt;code>content.en&lt;/code> directory to support multiple languages.&lt;/p>
&lt;p>The final directory structure will look like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── content/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── blog/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── article1.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── content.en/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── blog/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── article1.en.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In the English directory, naming files as &lt;code>article-name.en.md&lt;/code> identifies them as English versions of the default language articles, and language switch icons will be added to the articles. For the articles, just copy and paste the translations from ChatGPT.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to make a Hugo blog multilingual using ChatGPT. Utilizing ChatGPT simplifies the translation process. Multilingual support can help reach audiences outside Japan, increasing readership.&lt;/p>
&lt;p>Since it&amp;rsquo;s low-cost and efficient, it&amp;rsquo;s worth giving it a try.&lt;/p></description></item><item><title>Creating and Displaying a Favicon with Hugo</title><link>https://bossagyu.com/en/blog/010-favicon/</link><pubDate>Sun, 24 Dec 2023 22:14:39 +0900</pubDate><guid>https://bossagyu.com/en/blog/010-favicon/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains a simple method to create a favicon. It also covers how to display a favicon in Hugo.&lt;/p>
&lt;h2 id="what-is-a-favicon">What is a Favicon?&lt;/h2>
&lt;p>A favicon is an icon that appears in bookmarks, tabs, and home screens for websites. Google has published &lt;a class="link" href="https://developers.google.com/search/docs/appearance/favicon-in-search?hl=ja#guidelines" target="_blank" rel="noopener"
>guidelines for favicons&lt;/a> that appear in search results. Adhering to these guidelines can help your favicon appear in search results.&lt;/p>
&lt;h2 id="creating-a-favicon">Creating a Favicon&lt;/h2>
&lt;p>To create a favicon, use the following site:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.favicon-generator.org/" target="_blank" rel="noopener"
>Favicon.ico &amp;amp; App Icon Generator&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>When you visit the site, you&amp;rsquo;ll see a screen like this.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/010-favicon/img-010-001.png"
width="3336"
height="1510"
srcset="https://bossagyu.com/en/blog/010-favicon/img-010-001_hu49ad1e6722066171a92ca460c1768e6d_699110_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/010-favicon/img-010-001_hu49ad1e6722066171a92ca460c1768e6d_699110_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Favicon Generator"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="530px"
>&lt;/p>
&lt;p>Enter the URL of the site you want a favicon for and click on Generate Favicon. Then, on the displayed screen, click the &amp;lsquo;Download the generated favicon&amp;rsquo; link to download the favicon.&lt;/p>
&lt;h2 id="displaying-a-favicon-in-hugo">Displaying a Favicon in Hugo&lt;/h2>
&lt;p>To display a favicon in Hugo, the process varies depending on the theme. For the &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>bearcub theme&lt;/a>, you can simply set it in the toml like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>params&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">favicon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;images/favicon.ico&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to create a favicon and display it in Hugo. Favicons are displayed in bookmarks, tabs, and home screens, so it&amp;rsquo;s a good idea to create one for your blog.&lt;/p></description></item><item><title>Introduction to Using Lighthouse</title><link>https://bossagyu.com/en/blog/009-light-house/</link><pubDate>Fri, 22 Dec 2023 23:08:00 +0900</pubDate><guid>https://bossagyu.com/en/blog/009-light-house/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to measure your blog&amp;rsquo;s performance using Lighthouse.&lt;/p>
&lt;h2 id="what-is-lighthouse">What is Lighthouse?&lt;/h2>
&lt;p>Lighthouse is a performance measurement tool for websites provided by Google. It&amp;rsquo;s available as a Google Chrome extension and can be used by installing the plugin.&lt;/p>
&lt;h2 id="installing-lighthouse">Installing Lighthouse&lt;/h2>
&lt;p>Install Lighthouse from the Chrome Web Store.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-001.png"
width="3090"
height="528"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-001_huebb24c65f9e0514e53794d84dae1d193_147708_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-001_huebb24c65f9e0514e53794d84dae1d193_147708_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Chrome Store"
class="gallery-image"
data-flex-grow="585"
data-flex-basis="1404px"
>&lt;/p>
&lt;p>Open the site you want to analyze and click on the Lighthouse icon.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-002.png"
width="976"
height="184"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-002_hu79a554b91c1fd5ce9f2d244e8889fd8e_12110_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-002_hu79a554b91c1fd5ce9f2d244e8889fd8e_12110_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Icon"
class="gallery-image"
data-flex-grow="530"
data-flex-basis="1273px"
>&lt;/p>
&lt;p>Click on Generate report to start the analysis.&lt;br>
This time, I ran it on my &lt;a class="link" href="https://bossagyu.com/blog/001-hugo-netlify-build/" target="_blank" rel="noopener"
>blog page&lt;/a>.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-003.png"
width="546"
height="1048"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-003_hu32cc9d1c5498eef6660862acfbb0c7a0_88803_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-003_hu32cc9d1c5498eef6660862acfbb0c7a0_88803_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Execution Screen"
class="gallery-image"
data-flex-grow="52"
data-flex-basis="125px"
>&lt;/p>
&lt;p>The results are displayed as follows, taking about 1 minute to complete.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-004.png"
width="1756"
height="906"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-004_hu5ee3cbd9121e8af4f867f831e4523042_214018_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-004_hu5ee3cbd9121e8af4f867f831e4523042_214018_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Results"
class="gallery-image"
data-flex-grow="193"
data-flex-basis="465px"
>&lt;/p>
&lt;h2 id="interpreting-the-results">Interpreting the Results&lt;/h2>
&lt;h3 id="performance">Performance&lt;/h3>
&lt;p>Evaluates web performance, like page loading and image display speeds. Clicking the See calculator link takes you to more details.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-005.png"
width="2236"
height="1222"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-005_hu09a21b450202618b8da67da25ceb5565_223078_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-005_hu09a21b450202618b8da67da25ceb5565_223078_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Performance"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="439px"
>&lt;/p>
&lt;h3 id="accessibility">Accessibility&lt;/h3>
&lt;p>Checks whether all users can access content and navigate efficiently within the site. Scrolling down shows areas flagged by Accessibility.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-006.png"
width="1790"
height="1238"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-006_hu87f9c989c987a1b95b21e6ceb46b2c76_168048_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-006_hu87f9c989c987a1b95b21e6ceb46b2c76_168048_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Accessibility"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="347px"
>&lt;/p>
&lt;p>It points out weak color contrast in the code snippets and missing descriptions in links.&lt;/p>
&lt;p>However, the flagged content is not from my writing but depends on the template, so to fix this, it would be necessary to override the Hugo template.&lt;/p>
&lt;h3 id="best-practices">Best Practices&lt;/h3>
&lt;p>Tests the integrity of web pages. You can view the testing items in the results.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-007.png"
width="962"
height="1070"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-007_hub9685d9d8ccde516e384b3026e5fd960_91137_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-007_hub9685d9d8ccde516e384b3026e5fd960_91137_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse Best Practices"
class="gallery-image"
data-flex-grow="89"
data-flex-basis="215px"
>&lt;/p>
&lt;h3 id="seo">SEO&lt;/h3>
&lt;p>You can check if the page is optimized for search engine result rankings.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/009-light-house/img-009-008.png"
width="957"
height="1215"
srcset="https://bossagyu.com/en/blog/009-light-house/img-009-008_hu4f2424bc6d0c40fadc50e3b571a98160_118994_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/009-light-house/img-009-008_hu4f2424bc6d0c40fadc50e3b571a98160_118994_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lighthouse SEO"
class="gallery-image"
data-flex-grow="78"
data-flex-basis="189px"
>&lt;/p>
&lt;h3 id="progressive-web-app">Progressive Web App&lt;/h3>
&lt;p>Checks if the loading speed of web pages on smartphones is optimized and if it&amp;rsquo;s suitable for PWAs. This wasn&amp;rsquo;t checked in this case.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>The article explained how to measure the performance of a blog using Lighthouse.
Especially for SEO, as it affects visibility in Google search results, it&amp;rsquo;s important to address these issues adequately.&lt;/p></description></item><item><title>Using AWS EventBridge to Schedule Lambda Functions</title><link>https://bossagyu.com/en/blog/008-aws-eventbrdge/</link><pubDate>Thu, 21 Dec 2023 23:03:13 +0900</pubDate><guid>https://bossagyu.com/en/blog/008-aws-eventbrdge/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use AWS EventBridge to schedule Lambda functions for periodic execution.&lt;/p>
&lt;h2 id="what-is-aws-eventbridge">What is AWS EventBridge?&lt;/h2>
&lt;p>AWS EventBridge is a service that facilitates the passing of events between AWS services, enabling the creation of event-driven architectures. For a detailed explanation, refer to the &lt;a class="link" href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html" target="_blank" rel="noopener"
>AWS official documentation on EventBridge&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>It is assumed that you have already created a Lambda function. For instructions on creating Lambda functions, please see the &lt;a class="link" href="https://aws.amazon.com/lambda/getting-started/" target="_blank" rel="noopener"
>AWS Lambda Getting Started guide&lt;/a>.&lt;/p>
&lt;h2 id="steps-to-schedule-a-lambda-function-with-eventbridge">Steps to Schedule a Lambda Function with EventBridge&lt;/h2>
&lt;p>To schedule your Lambda function with EventBridge, follow these steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Select the Lambda Function:&lt;/strong> Open the AWS Management Console, navigate to the Lambda service, and select the function you want to schedule.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-001.png"
width="1682"
height="608"
srcset="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-001_hua3391a0a4e37513ed67145a092be2b5f_101439_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-001_hua3391a0a4e37513ed67145a092be2b5f_101439_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Trigger addition screen"
class="gallery-image"
data-flex-grow="276"
data-flex-basis="663px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add a Trigger:&lt;/strong> Choose &amp;lsquo;Add trigger&amp;rsquo; and select &amp;lsquo;EventBridge (CloudWatch Events)&amp;rsquo; from the list of available triggers.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-002.png"
width="930"
height="400"
srcset="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-002_hu8fd7668508fa3ea65743ea0e537fb483_58214_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-002_hu8fd7668508fa3ea65743ea0e537fb483_58214_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Selecting EventBridge"
class="gallery-image"
data-flex-grow="232"
data-flex-basis="558px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Create a Rule:&lt;/strong> Once you select EventBridge, you will be prompted to create a new rule. Set up the rule to trigger the Lambda function at desired intervals. For this tutorial, we are using a cron expression to execute the function every 5 minutes. You can find more about cron syntax in the &lt;a class="link" href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html#cron-based" target="_blank" rel="noopener"
>EventBridge Scheduler documentation&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-003.png"
width="891"
height="903"
srcset="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-003_hub807cbe0354fdfc130d1a185b4a890c6_114907_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-003_hub807cbe0354fdfc130d1a185b4a890c6_114907_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Trigger configuration"
class="gallery-image"
data-flex-grow="98"
data-flex-basis="236px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Complete the Setup:&lt;/strong> After configuring the rule, it will appear in the Lambda function&amp;rsquo;s diagram as an associated trigger.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-004.png"
width="1761"
height="976"
srcset="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-004_huc419c6d31f69165530a8b0d8165aa994_183418_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-004_huc419c6d31f69165530a8b0d8165aa994_183418_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Configuration completion screen"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="433px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Test the Setup:&lt;/strong> As a practical application, I set up a function to send messages to LINE. The setup now sends notifications every 5 minutes, as shown in the screenshot below.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-005.png"
width="1494"
height="256"
srcset="https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-005_hu71f6b6c6b7e02c0c07c0e3b24896f2dd_36361_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/008-aws-eventbrdge/img-008-005_hu71f6b6c6b7e02c0c07c0e3b24896f2dd_36361_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Notification from EventBridge-triggered Lambda function"
class="gallery-image"
data-flex-grow="583"
data-flex-basis="1400px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>We&amp;rsquo;ve outlined how to use AWS EventBridge to schedule Lambda functions periodically. Remember, leaving the EventBridge setup as is will incur charges, so be sure to delete it if it&amp;rsquo;s no longer needed.&lt;/p></description></item><item><title>Using Google Search Console to Make Your Blog Searchable on Google</title><link>https://bossagyu.com/en/blog/007-google-search-console/</link><pubDate>Mon, 18 Dec 2023 19:10:04 +0900</pubDate><guid>https://bossagyu.com/en/blog/007-google-search-console/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>To appear in Google searches, it&amp;rsquo;s not enough just to apply SEO strategies; your site must first be recognized by Google. This article explains how to make your own custom domain blog appear in Google search results using Google Search Console.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Registering with Google Search Console&lt;/li>
&lt;li>Verifying Domain Ownership&lt;/li>
&lt;li>Registering the Sitemap&lt;/li>
&lt;li>Requesting Index Registration&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="registering-with-google-search-console">Registering with Google Search Console&lt;/h2>
&lt;p>Register on &lt;a class="link" href="https://search.google.com/search-console/welcome" target="_blank" rel="noopener"
>Google Search Console&lt;/a>.&lt;/p>
&lt;p>Choose your domain and enter the URL.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-001.png"
width="1838"
height="1546"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-001_hueec663f85e06a371439303da89c78565_290083_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-001_hueec663f85e06a371439303da89c78565_290083_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="URL input screen"
class="gallery-image"
data-flex-grow="118"
data-flex-basis="285px"
>&lt;/p>
&lt;h2 id="verifying-domain-ownership">Verifying Domain Ownership&lt;/h2>
&lt;p>A screen like the following will appear to verify DNS ownership.&lt;br>
(The TXT record content is blacked out for privacy.)&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-002.png"
width="1562"
height="1404"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-002_hu90d036695b5d9438a5ef8f0d8eb9f52d_277880_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-002_hu90d036695b5d9438a5ef8f0d8eb9f52d_277880_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="DNS ownership confirmation screen"
class="gallery-image"
data-flex-grow="111"
data-flex-basis="267px"
>&lt;/p>
&lt;p>You can verify ownership by adding a string specified by Google to your domain&amp;rsquo;s TXT record.
Go to your domain&amp;rsquo;s DNS settings and add a TXT record.&lt;/p>
&lt;p>In my case, I acquired the domain through Netlify, so I went to Netlify&amp;rsquo;s DNS settings.
Navigate to &lt;code>Domains -&amp;gt; Domain Settings -&amp;gt; DNS Records&lt;/code> and add the TXT record.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-003.png"
width="2510"
height="1058"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-003_hu314a39771588211da36db92d8d263e34_237067_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-003_hu314a39771588211da36db92d8d263e34_237067_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Netlify DNS Settings Screen"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="569px"
>&lt;/p>
&lt;p>Copy the content displayed on Google Search Console and paste it into the Value field.&lt;br>
(The Value part is blacked out for privacy.)&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-004.png"
width="1174"
height="1128"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-004_hu1e1863a2c4e003478336f70e9eafc56f_103599_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-004_hu1e1863a2c4e003478336f70e9eafc56f_103599_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Example of adding DNS"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="249px"
>&lt;/p>
&lt;p>Wait for DNS updates, which can take a few hours depending on the provider.&lt;/p>
&lt;p>You can check DNS propagation from the command line.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">dig -t txt bossagyu.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Afterward, press the verify ownership button on Google Search Console.&lt;br>
This completes the verification process, and your domain will be registered with Google Search Console.&lt;/p>
&lt;h2 id="registering-the-sitemap">Registering the Sitemap&lt;/h2>
&lt;p>Registering a sitemap informs Google about the structure of your site, facilitating the crawling process.
For blogs created with Hugo, the sitemap is available at &lt;code>/sitemap.xml&lt;/code>, which you should register.&lt;/p>
&lt;p>From the left menu of Google Search Console, select &amp;lsquo;Sitemaps&amp;rsquo; and add your sitemap.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-005.png"
width="1401"
height="649"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-005_huab186b2aac0819b0a23c39035e1f9b13_109847_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-005_huab186b2aac0819b0a23c39035e1f9b13_109847_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Sitemap Registration Screen"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="518px"
>&lt;/p>
&lt;h2 id="requesting-index-registration">Requesting Index Registration&lt;/h2>
&lt;p>Even if your site is registered in the sitemap, it can take time for Google to crawl and index it.
In my case, I requested index registration after waiting several days without being indexed.&lt;/p>
&lt;p>Search for the URL you want to register in Google Search Console, and click on &amp;lsquo;Request Indexing&amp;rsquo; found on the right side of the search result.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/007-google-search-console/img-007-006.png"
width="2900"
height="868"
srcset="https://bossagyu.com/en/blog/007-google-search-console/img-007-006_hu89514150a49eb25441f9d3432897d97a_212853_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/007-google-search-console/img-007-006_hu89514150a49eb25441f9d3432897d97a_212853_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Request index registration"
class="gallery-image"
data-flex-grow="334"
data-flex-basis="801px"
>&lt;/p>
&lt;p>This requests index registration.
It took a few hours for the index to be registered after clicking.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to make your custom domain blog searchable using Google Search Console.&lt;br>
It&amp;rsquo;s a waste not to have your blog appear in Google searches after all the effort of creating it, so give it a try.&lt;/p></description></item><item><title>Efficient Lambda Development with AWS Toolkit in IntelliJ</title><link>https://bossagyu.com/en/blog/006-intellij-lamda-setup/</link><pubDate>Tue, 12 Dec 2023 22:40:05 +0900</pubDate><guid>https://bossagyu.com/en/blog/006-intellij-lamda-setup/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to efficiently develop Lambda functions using the AWS Toolkit in IntelliJ.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Preliminary Preparation&lt;/li>
&lt;li>Installing AWS Toolkit&lt;/li>
&lt;li>Configuring AWS Toolkit&lt;/li>
&lt;li>Developing Lambda&lt;/li>
&lt;li>Executing Lambda Locally&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="preliminary-preparation">Preliminary Preparation&lt;/h2>
&lt;h3 id="installing-docker">Installing Docker&lt;/h3>
&lt;p>AWS Toolkit in IntelliJ uses Docker to run Lambda.&lt;br>
Prior to proceeding, please install Docker by referring to &lt;a class="link" href="https://docs.docker.jp/docker-for-mac/install.html" target="_blank" rel="noopener"
>these instructions&lt;/a>.&lt;/p>
&lt;h3 id="installing-aws-cli">Installing AWS CLI&lt;/h3>
&lt;p>Install AWS CLI (SAM).&lt;br>
For installation, refer to &lt;a class="link" href="https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/install-cliv2-mac.html" target="_blank" rel="noopener"
>these instructions&lt;/a>.&lt;/p>
&lt;p>In IntelliJ, set the path for SAM CLI executable under &lt;code>File -&amp;gt; Settings -&amp;gt; Tools -&amp;gt; AWS Toolkit&lt;/code>.&lt;br>
In my case, as I installed it through brew, I set the following path.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-005.png"
width="976"
height="707"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-005_hu675386622417230d840d91c8ebb2bb8f_99529_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-005_hu675386622417230d840d91c8ebb2bb8f_99529_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Intellij configuration"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="331px"
>&lt;/p>
&lt;h2 id="installing-aws-toolkit">Installing AWS Toolkit&lt;/h2>
&lt;p>Install the AWS Toolkit via IntelliJ plugins.
Refer to &lt;a class="link" href="https://www.jetbrains.com/help/idea/managing-plugins.html#install_plugin" target="_blank" rel="noopener"
>this guide&lt;/a> for plugin installation.&lt;/p>
&lt;h2 id="configuring-aws-toolkit">Configuring AWS Toolkit&lt;/h2>
&lt;p>To use AWS Toolkit, you need to set up your AWS credentials.&lt;/p>
&lt;p>Set up AWS credentials through AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-001.png"
width="2196"
height="1099"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-001_huf4116ed306cba8df785a2a60b5b23b2e_297569_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-001_huf4116ed306cba8df785a2a60b5b23b2e_297569_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="AWS Authentication"
class="gallery-image"
data-flex-grow="199"
data-flex-basis="479px"
>&lt;/p>
&lt;p>Obtain and configure your Access Key ID and Secret Access Key from the AWS console.
Once configured, AWS resources should appear in AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-002.png"
width="400"
height="517"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-002_huef1a4e77eb43fc9eb01b7ee491b04729_36733_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-002_huef1a4e77eb43fc9eb01b7ee491b04729_36733_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="AWS resource addition confirmation"
class="gallery-image"
data-flex-grow="77"
data-flex-basis="185px"
>&lt;/p>
&lt;p>Note: In this image, the region is set to &lt;code>us-east-1&lt;/code>. Please adjust according to the region where you intend to create your Lambda.&lt;/p>
&lt;h2 id="developing-lambda">Developing Lambda&lt;/h2>
&lt;p>Create a code snippet like the following.&lt;/p>
&lt;p>lambda-sample.py&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">lambda_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Hello World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create a Lambda through AWS Explorer.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-003.png"
width="382"
height="452"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-003_hu43e53933fae6825db1f62c0ff344925c_42804_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-003_hu43e53933fae6825db1f62c0ff344925c_42804_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lambda function creation screen"
class="gallery-image"
data-flex-grow="84"
data-flex-basis="202px"
>&lt;/p>
&lt;p>Select Create Lambda Function and input the necessary values.&lt;br>
For the Handler, enter &lt;code>&amp;lt;filename&amp;gt;.&amp;lt;function name&amp;gt;&lt;/code> from your code snippet.&lt;br>
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-004.png"
width="769"
height="626"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-004_hub0ca7c127cd2ded12c0d6c6eb7b0efd4_80439_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-004_hub0ca7c127cd2ded12c0d6c6eb7b0efd4_80439_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lambda function setup"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="294px"
>&lt;/p>
&lt;p>This completes the creation of your Lambda.&lt;/p>
&lt;h2 id="executing-lambda-locally">Executing Lambda Locally&lt;/h2>
&lt;p>The Toolkit also allows you to execute Lambda locally.
&lt;img src="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-006.png"
width="544"
height="181"
srcset="https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-006_hue5ae0f1238e4626d26a5e0ef51d83c5a_29793_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/006-intellij-lamda-setup/img-006-006_hue5ae0f1238e4626d26a5e0ef51d83c5a_29793_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Lambda function execution screen"
class="gallery-image"
data-flex-grow="300"
data-flex-basis="721px"
>&lt;/p>
&lt;p>Selecting Run will execute the Lambda locally.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article provided a guide on efficiently developing Lambda using AWS Toolkit in IntelliJ.
Developing in IntelliJ and executing locally can significantly improve development efficiency.&lt;/p></description></item><item><title>How to Use GitHub Copilot in IntelliJ</title><link>https://bossagyu.com/en/blog/005-github-copilot/</link><pubDate>Mon, 11 Dec 2023 22:45:40 +0900</pubDate><guid>https://bossagyu.com/en/blog/005-github-copilot/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article explains how to use GitHub Copilot in IntelliJ.
Additionally, a cheat sheet of shortcuts is provided.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Register for GitHub Copilot&lt;/li>
&lt;li>Configure IntelliJ&lt;/li>
&lt;li>Use GitHub Copilot&lt;/li>
&lt;li>Summary&lt;/li>
&lt;/ol>
&lt;h2 id="registering-for-github-copilot">Registering for GitHub Copilot&lt;/h2>
&lt;p>Register for GitHub Copilot through the &lt;a class="link" href="https://copilot.github.com/" target="_blank" rel="noopener"
>GitHub Copilot&lt;/a> link.&lt;/p>
&lt;h2 id="configuring-intellij">Configuring IntelliJ&lt;/h2>
&lt;p>Install the GitHub Copilot plugin from IntelliJ plugins.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/005-github-copilot/img-005-001.png"
width="972"
height="237"
srcset="https://bossagyu.com/en/blog/005-github-copilot/img-005-001_huf1c35ae508766e7174ebde609be4cd7c_63136_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/005-github-copilot/img-005-001_huf1c35ae508766e7174ebde609be4cd7c_63136_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="GitHub Copilot plugin"
class="gallery-image"
data-flex-grow="410"
data-flex-basis="984px"
>&lt;/p>
&lt;p>Once installed, restart IntelliJ.&lt;/p>
&lt;h2 id="using-github-copilot">Using GitHub Copilot&lt;/h2>
&lt;p>When you write code in IntelliJ, GitHub Copilot will assist with code completion.&lt;/p>
&lt;p>Here is a list of shortcuts for Mac:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Shortcut&lt;/th>
&lt;th>Function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>tab&lt;/code>&lt;/td>
&lt;td>Complete the code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Option&lt;/code> + &lt;code>]&lt;/code>&lt;/td>
&lt;td>Show the next completion suggestion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Option&lt;/code> + &lt;code>[&lt;/code>&lt;/td>
&lt;td>Show the previous completion suggestion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Command&lt;/code> + &lt;code>→&lt;/code>&lt;/td>
&lt;td>Accept only the next word of the suggestion&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>This article explained how to use GitHub Copilot in IntelliJ.
It&amp;rsquo;s worth noting that this article was written using GitHub Copilot, and it significantly assists with blog creation in Markdown, so those interested should give it a try.&lt;/p></description></item><item><title>Setting Up a Local Environment Using Pyenv and venv</title><link>https://bossagyu.com/en/blog/004-paython-setup/</link><pubDate>Sun, 10 Dec 2023 23:19:33 +0900</pubDate><guid>https://bossagyu.com/en/blog/004-paython-setup/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article documents how to set up a Python environment for development on a Mac local environment.&lt;br>
In this case, we will use two systems to manage different versions of Python and virtual environments:&lt;/p>
&lt;ul>
&lt;li>pyenv
&lt;ul>
&lt;li>Used to handle multiple versions of Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>venv
&lt;ul>
&lt;li>Used to separate environments for each project.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>For explanations on the differences and the necessity of each, this &lt;a class="link" href="https://jimaru.blog/programming/python/venv_pyenv_choice/" target="_blank" rel="noopener"
>article&lt;/a> is a helpful reference.&lt;/p>
&lt;h2 id="installing-python">Installing Python&lt;/h2>
&lt;p>First, install Pyenv on your local environment to use a specific version of Python.&lt;/p>
&lt;p>Install pyenv.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install pyenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the installed version of pyenv.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv 2.3.35
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add settings to zsh.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> -e &lt;span class="s1">&amp;#39;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n eval &amp;#34;$(pyenv init -)&amp;#34;\nfi&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Reload &lt;code>.zshrc&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Display a list of installable Python versions.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv install --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Install the specified version.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv install 3.11.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Use the specified Python version in your project folder.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &amp;lt;created project folder&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv &lt;span class="nb">local&lt;/span> 3.11.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv versions
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If global, it will be applied to the entire system.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pyenv global 3.11.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check the version of Python being executed.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -V
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="creating-a-virtual-environment-with-venv">Creating a Virtual Environment with venv&lt;/h2>
&lt;p>Create a virtual environment in the project directory.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># python -m venv &amp;lt;virtual environment name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python -m venv venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Activate the virtual environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To deactivate, execute the following command.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This completes the setup of the local environment.&lt;/p></description></item><item><title>How to Set Up Google Analytics with Hugo</title><link>https://bossagyu.com/en/blog/003-google-analytics/</link><pubDate>Sat, 09 Dec 2023 18:09:42 +0900</pubDate><guid>https://bossagyu.com/en/blog/003-google-analytics/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This article briefly explains how to set up Google Analytics with Hugo.&lt;/p>
&lt;h2 id="steps-to-implementation">Steps to Implementation&lt;/h2>
&lt;ol>
&lt;li>Register with Google Analytics&lt;/li>
&lt;li>Obtain the Tracking ID&lt;/li>
&lt;li>Add the Tracking ID to Hugo&amp;rsquo;s configuration&lt;/li>
&lt;/ol>
&lt;h2 id="registering-with-google-analytics">Registering with Google Analytics&lt;/h2>
&lt;p>Follow the instructions on &lt;a class="link" href="https://support.google.com/analytics/answer/9304153?hl=ja" target="_blank" rel="noopener"
>Setting up a new website or app with GA4&lt;/a> to register.&lt;br>
When you add a data stream, you will get a Tracking ID, so make a note of it.
&lt;img src="https://bossagyu.com/en/blog/003-google-analytics/img-003-001.png"
width="1262"
height="387"
srcset="https://bossagyu.com/en/blog/003-google-analytics/img-003-001_hud6bb49f0ab37d8b4799433827135bf4a_61149_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/003-google-analytics/img-003-001_hud6bb49f0ab37d8b4799433827135bf4a_61149_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Add Data Stream Screen"
class="gallery-image"
data-flex-grow="326"
data-flex-basis="782px"
>
※ The Tracking ID may be displayed as &amp;ldquo;Measurement ID&amp;rdquo; due to translation.&lt;/p>
&lt;h2 id="adding-tracking-id-to-hugos-configuration">Adding Tracking ID to Hugo&amp;rsquo;s Configuration&lt;/h2>
&lt;h3 id="add-settings-in-toml">Add settings in toml&lt;/h3>
&lt;p>Add &lt;code>googleAnalytics = Tracking ID&lt;/code> to your config.toml.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseURL&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;https://bossagyu.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">languageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;ja-jp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;Bossagyu Blog&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">theme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;hugo-bearcub&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">googleAnalytics&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;G-1234ABCDEF&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># ↑ Add this line, replace the Tracking ID with your own.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="embedding-the-tracking-code">Embedding the Tracking Code&lt;/h3>
&lt;p>Some templates might read settings from the toml file, but the &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>bearcub&lt;/a> template I use does not support this, so I added the tracking code to the header myself.&lt;/p>
&lt;p>For the code snippet, I referred to &lt;a class="link" href="https://github.com/clente/hugo-bearcub/tree/main" target="_blank" rel="noopener"
>Makumaku Hugo Notes&lt;/a>.&lt;/p>
&lt;p>Create &lt;code>layouts/partials/analytics.html&lt;/code> to load the tracking code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">{{ if not .Site.IsServer }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ with .Site.GoogleAnalytics }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- Google tag (gtag.js) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">async&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://www.googletagmanager.com/gtag/js?id={{ . }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataLayer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataLayer&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">function&lt;/span> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="nx">dataLayer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arguments&lt;/span>&lt;span class="p">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gtag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;config&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;{{ . }}&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Make the page header load &lt;code>analytics.html&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copy the content of the template to override it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp themes/hugo-bearcub/layouts/_default/baseof.html layouts/_default/baseof.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim layouts/_default/baseof.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add &lt;code>{{- partial &amp;quot;analytics&amp;quot; . -}}&lt;/code> to baseof.html.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ with .Site.LanguageCode }}{{ . }}{{ else }}en-US{{ end }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{- partial &amp;#34;analytics&amp;#34; . -}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-Clacks-Overhead&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;GNU Terry Pratchett&amp;#34;&lt;/span> &lt;span class="err">/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After adding the above source code and rebuilding, data will be sent to Google Analytics.&lt;/p>
&lt;h2 id="tips">Tips&lt;/h2>
&lt;p>If it seems like data is not being transmitted to Google Analytics despite these steps, it&amp;rsquo;s possible that the tags have not been added correctly.&lt;br>
To troubleshoot, first check if the tracking is included in the HTML by using Google Developer Tools.&lt;/p></description></item><item><title>Registering and Using the LINE Messaging API</title><link>https://bossagyu.com/en/blog/002-line-messaging-api/</link><pubDate>Thu, 07 Dec 2023 09:37:00 +0900</pubDate><guid>https://bossagyu.com/en/blog/002-line-messaging-api/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>I thought of creating an application using LINE&amp;rsquo;s Bot, so first, I will make the Bot usable.&lt;br>
This page introduces how to register for the LINE Messaging API and how to send messages from the command line using curl.&lt;/p>
&lt;h2 id="using-the-messaging-api">Using the Messaging API&lt;/h2>
&lt;p>Log in to &lt;a class="link" href="https://developers.line.biz/console/" target="_blank" rel="noopener"
>LINE Developers&lt;/a> and create a provider.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-001.png"
width="1542"
height="947"
srcset="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-001_hu0f14840654aed48d16eb2fc9422f6fa9_170581_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/002-line-messaging-api/img-002-001_hu0f14840654aed48d16eb2fc9422f6fa9_170581_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Provider Creation Screen"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;p>A provider is (&lt;a class="link" href="https://developers.line.biz/ja/docs/line-developers-console/overview/#provider" target="_blank" rel="noopener"
>Explanation&lt;/a>)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">On the LINE Developers site, a service provider refers to individuals, companies, or organizations that provide services and obtain user information (service proprietor in LINE Mini Apps).
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So, you can enter any string you like.&lt;/p>
&lt;p>Then, create a new channel.
&lt;img src="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-002.png"
width="1393"
height="1461"
srcset="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-002_hu35721a5501bd4d5408347db79d1d688a_163848_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/002-line-messaging-api/img-002-002_hu35721a5501bd4d5408347db79d1d688a_163848_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Channel creation screen"
class="gallery-image"
data-flex-grow="95"
data-flex-basis="228px"
>&lt;/p>
&lt;p>Clicking the create button will establish a new channel.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-003.png"
width="848"
height="267"
srcset="https://bossagyu.com/en/blog/002-line-messaging-api/img-002-003_hudf15c356e8d7f64c7636ad582293d1a9_33429_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/002-line-messaging-api/img-002-003_hudf15c356e8d7f64c7636ad582293d1a9_33429_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Channel creation results"
class="gallery-image"
data-flex-grow="317"
data-flex-basis="762px"
>&lt;/p>
&lt;h1 id="posting-from-the-command-line">Posting from the Command Line&lt;/h1>
&lt;p>Add friends by reading the QR code in the Messaging API settings.&lt;/p>
&lt;p>Obtain the &amp;lsquo;Channel Access Token (Long-lived)&amp;rsquo; from the Messaging API settings.
Get &amp;lsquo;Your User ID&amp;rsquo; from the channel basic settings.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;Channel Access Token (Long-lived)&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;Your User ID&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">UUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>uuidgen &lt;span class="p">|&lt;/span> tr &lt;span class="s2">&amp;#34;[:upper:]&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;[:lower:]&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -v -X POST https://api.line.me/v2/bot/message/push &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-H &lt;span class="s2">&amp;#34;X-Line-Retry-Key: &amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-d &lt;span class="s2">&amp;#34;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;to\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;messages\&amp;#34;:[
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;type\&amp;#34;:\&amp;#34;text\&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> \&amp;#34;text\&amp;#34;:\&amp;#34;Hello, world1\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If a response is returned and you see a post from the Bot in your LINE chat, it&amp;rsquo;s a success!&lt;/p></description></item><item><title>Publishing a Blog with Hugo + Netlify + Github</title><link>https://bossagyu.com/en/blog/001-hugo-netlify-build/</link><pubDate>Sat, 02 Dec 2023 00:59:37 +0900</pubDate><guid>https://bossagyu.com/en/blog/001-hugo-netlify-build/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This document describes the steps to create a site with Hugo, manage it with Github, and build it with Netlify from scratch.&lt;br>
With this method, you can easily publish by just pushing your Markdown-written blog to Github.&lt;/p>
&lt;h2 id="process">Process&lt;/h2>
&lt;ol>
&lt;li>Generate a site with Hugo&lt;/li>
&lt;li>Push to Github&lt;/li>
&lt;li>Deploy with Netlify&lt;/li>
&lt;/ol>
&lt;h2 id="generating-a-static-site-with-hugo">Generating a Static Site with Hugo&lt;/h2>
&lt;p>First, install Hugo.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create a template for the blog.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo new site my-blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add a theme suitable for the blog as a submodule.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Add the theme as a submodule from Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Apply the theme by adding it to hugo.toml.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;theme = &amp;#39;ananke&amp;#39;&amp;#34;&lt;/span> &amp;gt;&amp;gt; config.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Start the server.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Access the URL like &lt;code>http://localhost:51517/&lt;/code> shown in the startup log &lt;code>Web Server is available at http://localhost:51517/ (bind address 127.0.0.1)&lt;/code> to view the locally launched static site.&lt;/p>
&lt;h3 id="tips">Tips&lt;/h3>
&lt;ul>
&lt;li>If you want to change the Hugo theme, please choose your favorite one from &lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Hugo Themes&lt;/a>.
&lt;ul>
&lt;li>It&amp;rsquo;s recommended to run through until you build with Netlify first, as this can be changed later.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The way to write Toml files is described in &lt;a class="link" href="https://gohugo.io/getting-started/configuration/" target="_blank" rel="noopener"
>Configure Hugo&lt;/a>.&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2 id="push-to-github">Push to Github&lt;/h2>
&lt;p>Create a repository on &lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github&lt;/a>.&lt;br>
After creation, execute the following commands to push your site.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> .hugo_build.lock &amp;gt;&amp;gt; .gitignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;first commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace &amp;lt;user name&amp;gt; with your own username.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is an example of creating a repository called my-blog.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:&amp;lt;user name&amp;gt;/my-blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Once the push is complete, the source code becomes viewable on the Github UI.&lt;/p>
&lt;h2 id="deploy-with-netlify">Deploy with Netlify&lt;/h2>
&lt;p>Access &lt;a class="link" href="https://www.netlify.com/" target="_blank" rel="noopener"
>Netlify&lt;/a> and perform deployment.&lt;br>
There are instructions on &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-netlify/" target="_blank" rel="noopener"
>Hugo&amp;rsquo;s official website&lt;/a>, so refer to them for integration.&lt;/p>
&lt;p>Follow the instructions to complete the deployment, and the result of the Deploy will be shown as &lt;code>published&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-001.png"
width="1259"
height="781"
srcset="https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-001_hu712c6624ab1de9c2a2e527b803a3005e_132140_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-001_hu712c6624ab1de9c2a2e527b803a3005e_132140_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Deployment execution result screen"
class="gallery-image"
data-flex-grow="161"
data-flex-basis="386px"
>&lt;/p>
&lt;p>Click on the URL displayed on the site to access the deployed site.
&lt;img src="https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-002.png"
width="844"
height="274"
srcset="https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-002_hu73c75e92b3844c61fd78de6d6904914d_56626_480x0_resize_box_3.png 480w, https://bossagyu.com/en/blog/001-hugo-netlify-build/img-001-002_hu73c75e92b3844c61fd78de6d6904914d_56626_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Link display screen"
class="gallery-image"
data-flex-grow="308"
data-flex-basis="739px"
>&lt;/p>
&lt;p>This completes the deployment process.
After this, any changes made and pushed to main will automatically trigger deployment, updating the site content.&lt;/p></description></item><item><title>About</title><link>https://bossagyu.com/en/page/about/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://bossagyu.com/en/page/about/</guid><description>&lt;h2 id="hi-im-bossagyu">Hi I&amp;rsquo;m Bossagyu&lt;/h2>
&lt;ul>
&lt;li>Major web company manager&lt;/li>
&lt;li>Backend Engineer (5 years) → Management Position (6 years)&lt;/li>
&lt;li>In this blog, I will talk about both management and technology&lt;/li>
&lt;/ul>
&lt;h2 id="links">Links&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://twitter.com/bossagyu" target="_blank" rel="noopener"
>Twitter(X)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/bossagyu" target="_blank" rel="noopener"
>Github&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="skill">Skill&lt;/h2>
&lt;ul>
&lt;li>Management&lt;/li>
&lt;li>Java, Python, JavaScript, PHP&lt;/li>
&lt;li>Cassandra, MySQL&lt;/li>
&lt;li>Data Engineering&lt;/li>
&lt;/ul>
&lt;h2 id="certification">Certification&lt;/h2>
&lt;ul>
&lt;li>2011 Fundamental Information Technology Engineer&lt;/li>
&lt;li>2012 Applied Information Technology Engineer&lt;/li>
&lt;li>2016 LPIC Level 1&lt;/li>
&lt;li>2017 Certified ScrumMaster&lt;/li>
&lt;li>2019 Project Management Specialist&lt;/li>
&lt;li>2019 Certified Management3.0 Attendee&lt;/li>
&lt;li>2020 Certified LeSS Practitioner&lt;/li>
&lt;li>2021 Level 3 Financial Planner&lt;/li>
&lt;li>2022 Advanced Certified ScrumMaster&lt;/li>
&lt;li>2023 AWS Cloud Practitioner&lt;/li>
&lt;li>2023 AWS Certified Solutions Architect Associate&lt;/li>
&lt;li>2023 Certified Product Owner&lt;/li>
&lt;/ul></description></item><item><title>Archives</title><link>https://bossagyu.com/en/page/archives/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://bossagyu.com/en/page/archives/</guid><description/></item></channel></rss>